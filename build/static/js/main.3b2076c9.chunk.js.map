{"version":3,"sources":["components/Header.tsx","assets/Mikasa_Ackermann.png","hooks/useData.tsx","components/NotificationBadge.tsx","components/Profile.tsx","models/SocialInteraction.ts","components/AddModalSocialInteraction.tsx","models/VisitedPlace.ts","components/AddModalVisitedPlace.tsx","redux/actions/SocialInteractionActionTypes.tsx","redux/actions/SocialInteractionActions.tsx","redux/actions/VisitedPlaceActionTypes.tsx","redux/actions/VisitedPlaceActions.tsx","components/Cards.tsx","models/SocialInteractionSummary.ts","models/VisitedPlaceSummary.ts","components/Charts.tsx","components/Dashboard.tsx","components/SocialInteractionTable.tsx","components/VisitedPlaceTable.tsx","components/PageNotFound.tsx","App.tsx","reportWebVitals.ts","redux/MonitorEnhancer.ts","redux/reducers/SocialInteractionReducers.ts","redux/reducers/VisitedPlaceReducers.ts","redux/Store.tsx","index.tsx"],"names":["Header","className","useData","useSelector","state","socialInteraction","loading","visitedPlace","isloading","useStyles","makeStyles","theme","createStyles","errorTypo","padding","spacing","background","width","fontSize","goodTypo","NotificationBadge","classes","React","useState","notificationMessageSocial","setNotificationMessageSocial","notificationMessagePlace","setNotificationMessagePlace","anchorEl","setAnchorEl","currentDate","Date","setDate","getDate","dayAfterCurrentDate","toISOString","slice","date","fourteenDaysAgo","socialInteractionFor14days","filter","item","isSocialDistancing","visitedPlaceFor14days","isCrowded","open","Boolean","id","undefined","useEffect","length","Button","onClick","event","currentTarget","color","Badge","badgeContent","style","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","Typography","Profile","Col","md","src","ProfilePicture","alt","SocialInteraction","_id","name","hours","this","title","option","input","SocialInteractionsModal","modalStatus","handleClose","handleSave","setName","setHours","setIsSocialDistancing","btnDisable","setBtnDisable","map","options","setOptions","handleNameChange","target","value","optionList","dateNow","dateToday","Set","getDistinctArray","newSocialInteraction","Dialog","disableBackdropClick","DialogTitle","variant","DialogContent","Autocomplete","disableClearable","clearOnBlur","onSelect","renderInput","params","TextField","InputLabelProps","required","helperText","label","fullWidth","onChange","type","InputProps","inputProps","max","min","autoComplete","FormControlLabel","control","Checkbox","checked","DialogActions","disabled","handleSubmit","VisitedPlace","place","VisitedPlacesModal","setPlace","setIsCrowded","handlePlaceChange","newVisitedPlace","ADD_SOCIALINTERACTION_REQUEST","ADD_SOCIALINTERACTION_SUCCESS","ADD_SOCIALINTERACTION_FAILURE","FETCH_SOCIALINTERACTION_REQUEST","FETCH_SOCIALINTERACTION_SUCCESS","FETCH_SOCIALINTERACTION_FAILURE","DELETE_SOCIALINTERACTION_REQUEST","DELETE_SOCIALINTERACTION_SUCCESS","DELETE_SOCIALINTERACTION_FAILURE","UPDATE_SOCIALINTERACTION_REQUEST","UPDATE_SOCIALINTERACTION_SUCCESS","UPDATE_SOCIALINTERACTION_FAILURE","AddSocialInteractionAction","socialinteraction","dispatch","Actions","payload","AddSocialInteractionRequestAction","axios","post","then","res","AddSocialInteractionSuccessAction","data","catch","error","AddSocialInteractionFailureAction","message","FetchSocialInteractionAction","getState","get","response","FetchSocialInteractionFailureAction","DeleteSocialInteractionAction","socialinteractionId","delete","DeleteSocialInteractionSuccessAction","DeleteSocialInteractionFailureAction","UpdateSocialInteractionAction","UpdateSocialInteractionRequestAction","put","UpdateSocialInteractionSuccessAction","UpdateSocialInteractionFailureAction","ADD_VISITEDPLACE_REQUEST","ADD_VISITEDPLACE_SUCCESS","ADD_VISITEDPLACE_FAILURE","FETCH_VISITEDPLACE_REQUEST","FETCH_VISITEDPLACE_SUCCESS","FETCH_VISITEDPLACE_FAILURE","DELETE_VISITEDPLACE_REQUEST","DELETE_VISITEDPLACE_SUCCESS","DELETE_VISITEDPLACE_FAILURE","UPDATE_VISITEDPLACE_REQUEST","UPDATE_VISITEDPLACE_SUCCESS","UPDATE_VISITEDPLACE_FAILURE","AddVisitedPlaceAction","visitedplace","AddVisitedPlaceRequestAction","AddVisitedPlaceSuccessAction","AddVisitedPlaceFailureAction","FetchVisitedPlaceAction","FetchVisitedPlaceFailureAction","DeleteVisitedPlaceAction","visitedplaceId","DeleteVisitedPlaceSuccessAction","DeleteVisitedPlaceFailureAction","UpdateVisitedPlaceAction","UpdateVisitedPlaceRequestAction","UpdateVisitedPlaceSuccessAction","UpdateVisitedPlaceFailureAction","root","height","display","count","marginRight","marginTop","SocialInteractionsCard","setModalStatus","useDispatch","Card","elevation","CardContent","Row","CardActions","size","Fab","SocialInteractionActions","handleAddSocialInteraction","VisitedPlacesCard","VisitedPlaceActions","handleAddVisitedPlace","SocialInteractionSummary","VisitedPlaceSummary","SocialInteractionsChart","socialInteractionSummary","sevenDaysAgo","socialInteractionList","Array","from","reduce","m","set","toString","substr","Map","Paper","to","valueField","argumentField","text","VisitedPlacesChart","visitedPlaceSummary","visitedPlaceList","Dashboard","checkbox","marginLeft","columnHeaders","field","hidden","cellStyle","textAlign","validate","rowData","SocialInteractionsList","showLast14Days","setshowLast14Days","isLoading","columns","editable","onRowAdd","newData","Promise","resolve","setTimeout","onRowUpdate","oldData","handleUpdateSocialInteraction","onRowDelete","handleDeleteSocialInteraction","rowStyle","backgroundColor","headerStyle","searchFieldStyle","VisitedPlacesList","handleUpdateVisitedPlace","handleDeleteVisitedPlace","PageNotFound","fullScreen","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","monitoEnhancer","createStore","reducer","action","start","performance","now","console","log","newState","end","diff","Math","round","initialState","reducers","compose","combineReducers","index","findIndex","x","store","applyMiddleware","thunk","defaults","baseURL","ReactDOM","render","Store","document","getElementById"],"mappings":"sTAWeA,EARA,WACb,OACE,qBAAKC,UAAU,SAAf,SACE,+DCNS,MAA0B,6C,iGCe5BC,EAAU,WACrB,MAAuCC,aAGrC,SAACC,GAAD,OAAWA,EAAMC,qBAHXA,EAAR,EAAQA,kBAAmBC,EAA3B,EAA2BA,QAI3B,EAAoCH,aAGlC,SAACC,GAAD,OAAWA,EAAMG,gBAEnB,MAAO,CACLF,oBACAE,aAPF,EAAQA,aAQND,UACAE,UATF,EAAsBA,YCZlBC,EAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,UAAW,CACTC,QAASH,EAAMI,QAAQ,GACvBC,WAAY,UACZC,MAAO,QACPC,SAAU,QAEZC,SAAU,CACRL,QAASH,EAAMI,QAAQ,GACvBC,WAAY,UACZC,MAAO,QACPC,SAAU,aAyHDE,EApHW,WACxB,MAA4ClB,IAApCG,EAAR,EAAQA,kBAAmBE,EAA3B,EAA2BA,aACrBc,EAAUZ,IAChB,EAGIa,IAAMC,SAAiB,IAH3B,mBACEC,EADF,KAEEC,EAFF,KAIA,EAGIH,IAAMC,SAAiB,IAH3B,mBACEG,EADF,KAEEC,EAFF,KAIA,EAAgCL,IAAMC,SACpC,MADF,mBAAOK,EAAP,KAAiBC,EAAjB,KAgBIC,EAAc,IAAIC,KACtBD,EAAYE,QAAQF,EAAYG,UAAY,GAC5C,IAAIC,EAAsBJ,EAAYK,cAAcC,MAAM,EAAG,IAEzDC,EAAO,IAAIN,KACfM,EAAKL,QAAQK,EAAKJ,UAAY,IAC9B,IAAIK,EAAkB,IAAIP,KAAKM,GAAMF,cAAcC,MAAM,EAAG,IAExDG,EAA6BlC,EAAkBmC,QACjD,SAACC,GAAD,OACE,IAAIV,KAAKU,EAAKJ,MAAMF,cAAcC,MAAM,EAAG,KAAOE,GAClD,IAAIP,KAAKU,EAAKJ,MAAMF,cAAcC,MAAM,EAAG,KAAOF,IACtB,IAA5BO,EAAKC,sBAGLC,EAAwBpC,EAAaiC,QACvC,SAACC,GAAD,OACE,IAAIV,KAAKU,EAAKJ,MAAMF,cAAcC,MAAM,EAAG,KAAOE,GAClD,IAAIP,KAAKU,EAAKJ,MAAMF,cAAcC,MAAM,EAAG,KAAOF,IAC/B,IAAnBO,EAAKG,aAWHC,EAAOC,QAAQlB,GACfmB,EAAKF,EAAO,sBAAmBG,EAYrC,OAVAC,qBAAU,WACRV,EAA2BW,OAAS,GAA+B,OAA1BP,EACrClB,EA9CJ,6HA+CIA,EA5CJ,6DA8CAkB,EAAsBO,OAAS,GAA+B,OAA1BP,EAChChB,EA5CJ,6HA6CIA,EA1CJ,qEA2CC,CAACtB,EAAmBE,IAGrB,gCACE,cAAC4C,EAAA,EAAD,CAAQC,QAvBQ,SAACC,GACnBxB,EAAYwB,EAAMC,gBAsBcC,MAAM,UAApC,SACE,cAACC,EAAA,EAAD,CAAOC,aAAc,EAAGF,MAAM,YAA9B,SACE,cAAC,IAAD,CAAyBG,MAAO,CAAExC,SAAU,cAGhD,eAACyC,EAAA,EAAD,CACEZ,GAAIA,EACJF,KAAMA,EACNjB,SAAUA,EACVgC,QA5Bc,WAClB/B,EAAY,OA4BRgC,aAAc,CACZC,SAAU,SACVC,WAAY,QAEdC,gBAAiB,CACfF,SAAU,MACVC,WAAY,SAXhB,UAcE,eAACE,EAAA,EAAD,CACEhE,UACEsC,EAA2BW,OAAS,EAChC7B,EAAQR,UACRQ,EAAQF,SAJhB,UAOGoB,EAA2BW,OAAS,EAAI,cAAC,IAAD,IAAiB,GACzD1B,KAEH,eAACyC,EAAA,EAAD,CACEhE,UACE0C,EAAsBO,OAAS,EAC3B7B,EAAQR,UACRQ,EAAQF,SAJhB,UAOGwB,EAAsBO,OAAS,EAAI,cAAC,IAAD,IAAiB,GACpDxB,YChHIwC,EAhBC,WACd,OACE,sBAAKjE,UAAU,UAAf,UACE,cAACkE,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,qBAAKC,IAAKC,EAAgBC,IAAI,OAAOtE,UAAU,sBAEjD,cAACkE,EAAA,EAAD,CAAKC,GAAI,EAAGnE,UAAU,eAAtB,SACE,kDAEF,cAACkE,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,cAAC,EAAD,U,2MChBKI,GAOX,WAAYnE,GAAyB,yBANrCoE,SAMoC,OALpCC,UAKoC,OAJpCrC,UAIoC,OAHpCsC,WAGoC,OAFpCjC,wBAEoC,EAClCkC,KAAKH,IAAMpE,EAAkBoE,IAC7BG,KAAKF,KAAOrE,EAAkBqE,KAC9BE,KAAKvC,KAAOhC,EAAkBgC,KAC9BuC,KAAKD,MAAQtE,EAAkBsE,MAC/BC,KAAKlC,mBAAqBrC,EAAkBqC,oBCY1CjC,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXiE,MAAO,CACL3D,SAAU,QAEZ4D,OAAQ,CACN5D,SAAU,QAEZ6D,MAAO,CACL7D,SAAU,aA8LD8D,GAzLkC,SAAC,GAK3C,IAJLC,EAII,EAJJA,YACAC,EAGI,EAHJA,YACAC,EAEI,EAFJA,WACA9E,EACI,EADJA,kBAEMgB,EAAUZ,KAChB,EAAwBa,IAAMC,WAA9B,mBAAOmD,EAAP,KAAaU,EAAb,KACA,EAAwB9D,IAAMC,WAA9B,mBAAOc,EAAP,KAAaL,EAAb,KACA,EAA0BV,IAAMC,WAAhC,mBAAOoD,EAAP,KAAcU,EAAd,KACA,EAAoD/D,IAAMC,UAAS,GAAnE,mBAAOmB,EAAP,KAA2B4C,EAA3B,KACA,EAAoChE,IAAMC,UAAS,GAAnD,mBAAOgE,EAAP,KAAmBC,EAAnB,KACA,EAA8BlE,IAAMC,SAClClB,EAAkBoF,KAAI,SAAChD,GACrB,OAAOA,EAAKiC,SAFhB,mBAAOgB,EAAP,KAAgBC,EAAhB,KAMMC,EAAmB,SAACvC,GACxB+B,EAAQ/B,EAAMwC,OAAOC,QA4BnBC,EAAa1F,EAAkBoF,KAAI,SAAChD,GACtC,OAAOA,EAAKiC,QAQVsB,EAAU,IAAIjE,KAClBiE,EAAQhE,QAAQgE,EAAQ/D,UAAY,GACpC,IAAIgE,EAAY,IAAIlE,KAAKiE,GAAS7D,cAAcC,MAAM,EAAG,IAEzDa,qBAAU,WACR0C,EAVuB,SAACI,GAExB,OADmB,YAAO,IAAIG,IAAIH,IASvBI,CAAiBJ,IACJP,IAAxBd,GAAQrC,GAAQsC,MACf,CAACtE,EAAmBqE,EAAMrC,EAAMsC,IAEnC,IAAIyB,EAAuB,IAAI5B,GAAkB,CAC/CE,OACArC,OACAsC,QACAjC,uBAGF,OACE,8BACE,eAAC2D,EAAA,EAAD,CACExD,KAAMoC,EACNrB,QAASsB,EACToB,sBAAoB,EACpB,kBAAgB,oBAJlB,UAME,cAACC,EAAA,EAAD,CAAaxD,GAAG,oBAAhB,SACE,cAACkB,EAAA,EAAD,CAAYuC,QAAQ,KAAKvG,UAAWoB,EAAQwD,MAA5C,sCAIF,cAAC4B,EAAA,EAAD,UACE,gCACE,cAACC,EAAA,EAAD,CACErF,QAAS,CACPyD,OAAQzD,EAAQyD,OAChBC,MAAO1D,EAAQ0D,OAEjBhC,GAAG,oBACH4D,kBAAgB,EAChBC,aAAa,EACblB,QAASA,EAAQD,KAAI,SAACX,GAAD,OAAYA,KACjC+B,SAAUjB,EACVkB,YAAa,SAACC,GAAD,OACX,cAACC,EAAA,EAAD,2BACMD,GADN,IAEEE,gBAAiB,CAAEvD,MAAO,CAAExC,SAAU,KACtCgG,UAAQ,EACRC,WAAY,IACZX,QAAQ,WACRzD,GAAG,OACHqE,MAAM,OACNC,WAAS,EACTC,SAAU1B,QAIhB,cAACoB,EAAA,EAAD,CACEE,UAAQ,EACRC,WAAW,IACXpE,GAAG,OACHyD,QAAQ,WACRe,KAAK,OACLF,WAAS,EACTG,WAAY,CACVC,WAAY,CACVC,IAAKzB,GAEP5E,QAAS,CACP0D,MAAO1D,EAAQ0D,QAGnBkC,gBAAiB,CAAEvD,MAAO,CAAExC,SAAU,KACtCoG,SA1Ga,SAACjE,GACxBrB,EAAQqB,EAAMwC,OAAOC,UA2Gb,cAACkB,EAAA,EAAD,CACEE,UAAQ,EACRC,WAAW,IACXX,QAAQ,WACRzD,GAAG,QACHqE,MAAM,QACNG,KAAK,SACLF,WAAS,EACTG,WAAY,CACVC,WAAY,CACVE,IAAK,EACLD,IAAK,GACLE,aAAc,OAEhBvG,QAAS,CACP0D,MAAO1D,EAAQ0D,QAGnBkC,gBAAiB,CAAEvD,MAAO,CAAExC,SAAU,KACtCoG,SA5Hc,SAACjE,GACzBgC,EAAShC,EAAMwC,OAAOC,UA6Hd,cAAC+B,EAAA,EAAD,CACEC,QACE,cAACC,EAAA,EAAD,CACEC,QAAStF,EACT4E,SA/Ha,WAC3BhC,GAAuB5C,IA+HTgC,KAAK,WACLnB,MAAM,YAGV6D,MAAM,wCAIZ,eAACa,EAAA,EAAD,WACE,cAAC9E,EAAA,EAAD,CACElD,UAAWoB,EAAQ0D,MACnB3B,QAvIW,WACnB8B,IACAE,EAAQ,IACRpD,OAAQgB,GACRqC,EAAS,IACTC,GAAsB,IAmId/B,MAAM,UAHR,oBAOA,cAACJ,EAAA,EAAD,CACElD,UAAWoB,EAAQ0D,MACnBmD,SAAU3C,EACVnC,QAAS,kBAvIE,SAACgD,GACpBjB,EAAWiB,GACXhB,EAAQ,IACRpD,EAAQ,IAAID,MACZsD,EAAS,IACTC,GAAsB,GAkIC6C,CAAa/B,IAC5B7C,MAAM,UAJR,2BCjNG6E,GAOX,WAAY7H,GAAoB,yBANhCkE,SAM+B,OAL/B4D,WAK+B,OAJ/BhG,UAI+B,OAH/BsC,WAG+B,OAF/B/B,eAE+B,EAC7BgC,KAAKH,IAAMlE,EAAakE,IACxBG,KAAKyD,MAAQ9H,EAAa8H,MAC1BzD,KAAKvC,KAAO9B,EAAa8B,KACzBuC,KAAKD,MAAQpE,EAAaoE,MAC1BC,KAAKhC,UAAYrC,EAAaqC,WCY5BnC,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXiE,MAAO,CACL3D,SAAU,QAEZ4D,OAAQ,CACN5D,SAAU,QAEZ6D,MAAO,CACL7D,SAAU,aA8LDoH,GAzL6B,SAAC,GAKtC,IAJLrD,EAII,EAJJA,YACAC,EAGI,EAHJA,YACAC,EAEI,EAFJA,WACA5E,EACI,EADJA,aAEMc,EAAUZ,KAChB,EAA0Ba,IAAMC,WAAhC,mBAAO8G,EAAP,KAAcE,EAAd,KACA,EAAwBjH,IAAMC,WAA9B,mBAAOc,EAAP,KAAaL,EAAb,KACA,EAA0BV,IAAMC,WAAhC,mBAAOoD,EAAP,KAAcU,EAAd,KACA,EAAkC/D,IAAMC,UAAS,GAAjD,mBAAOqB,EAAP,KAAkB4F,EAAlB,KACA,EAAoClH,IAAMC,UAAS,GAAnD,mBAAOgE,EAAP,KAAmBC,EAAnB,KACA,EAA8BlE,IAAMC,SAClChB,EAAakF,KAAI,SAAChD,GAChB,OAAOA,EAAK4F,UAFhB,mBAAO3C,EAAP,KAAgBC,EAAhB,KAMM8C,EAAoB,SAACpF,GACzBkF,EAASlF,EAAMwC,OAAOC,QA4BpBC,EAAaxF,EAAakF,KAAI,SAAChD,GACjC,OAAOA,EAAK4F,SAQVrC,EAAU,IAAIjE,KAClBiE,EAAQhE,QAAQgE,EAAQ/D,UAAY,GACpC,IAAIgE,EAAY,IAAIlE,KAAKiE,GAAS7D,cAAcC,MAAM,EAAG,IAEzDa,qBAAU,WACR0C,EAVuB,SAACI,GAExB,OADmB,YAAO,IAAIG,IAAIH,IASvBI,CAAiBJ,IACHP,IAAzB6C,GAAShG,GAAQsC,MAChB,CAACpE,EAAc8H,EAAOhG,EAAMsC,IAE/B,IAAI+D,EAAkB,IAAIN,GAAa,CACrCC,QACAhG,OACAsC,QACA/B,cAGF,OACE,8BACE,eAACyD,EAAA,EAAD,CACExD,KAAMoC,EACNrB,QAASsB,EACToB,sBAAoB,EACpB,kBAAgB,oBAJlB,UAME,cAACC,EAAA,EAAD,CAAaxD,GAAG,oBAAhB,SACE,cAACkB,EAAA,EAAD,CAAYuC,QAAQ,KAAKvG,UAAWoB,EAAQwD,MAA5C,iCAIF,cAAC4B,EAAA,EAAD,UACE,gCACE,cAACC,EAAA,EAAD,CACErF,QAAS,CACPyD,OAAQzD,EAAQyD,OAChBC,MAAO1D,EAAQ0D,OAEjBhC,GAAG,qBACH4D,kBAAgB,EAChBC,aAAa,EACblB,QAASA,EAAQD,KAAI,SAACX,GAAD,OAAYA,KACjC+B,SAAU4B,EACV3B,YAAa,SAACC,GAAD,OACX,cAACC,EAAA,EAAD,2BACMD,GADN,IAEEE,gBAAiB,CAAEvD,MAAO,CAAExC,SAAU,KACtCgG,UAAQ,EACRC,WAAY,IACZX,QAAQ,WACRzD,GAAG,QACHqE,MAAM,QACNC,WAAS,EACTC,SAAUmB,QAIhB,cAACzB,EAAA,EAAD,CACEE,UAAQ,EACRC,WAAW,IACXpE,GAAG,OACHyD,QAAQ,WACRe,KAAK,OACLF,WAAS,EACTG,WAAY,CACVC,WAAY,CACVC,IAAKzB,GAEP5E,QAAS,CACP0D,MAAO1D,EAAQ0D,QAGnBkC,gBAAiB,CAAEvD,MAAO,CAAExC,SAAU,KACtCoG,SA1Ga,SAACjE,GACxBrB,EAAQqB,EAAMwC,OAAOC,UA2Gb,cAACkB,EAAA,EAAD,CACEE,UAAQ,EACRC,WAAW,IACXX,QAAQ,WACRzD,GAAG,QACHqE,MAAM,QACNG,KAAK,SACLF,WAAS,EACTG,WAAY,CACVC,WAAY,CACVE,IAAK,EACLD,IAAK,GACLE,aAAc,OAEhBvG,QAAS,CACP0D,MAAO1D,EAAQ0D,QAGnBkC,gBAAiB,CAAEvD,MAAO,CAAExC,SAAU,KACtCoG,SA5Hc,SAACjE,GACzBgC,EAAShC,EAAMwC,OAAOC,UA6Hd,cAAC+B,EAAA,EAAD,CACEC,QACE,cAACC,EAAA,EAAD,CACEC,QAASpF,EACT0E,SA/Ha,WAC3BkB,GAAc5F,IA+HA8B,KAAK,WACLnB,MAAM,YAGV6D,MAAM,mCAIZ,eAACa,EAAA,EAAD,WACE,cAAC9E,EAAA,EAAD,CACElD,UAAWoB,EAAQ0D,MACnB3B,QAvIW,WACnB8B,IACAqD,EAAS,IACTvG,OAAQgB,GACRqC,EAAS,IACTmD,GAAa,IAmILjF,MAAM,UAHR,oBAOA,cAACJ,EAAA,EAAD,CACElD,UAAWoB,EAAQ0D,MACnBmD,SAAU3C,EACVnC,QAAS,kBAvIE,SAACsF,GACpBvD,EAAWuD,GACXH,EAAS,IACTvG,EAAQ,IAAID,MACZsD,EAAS,IACTmD,GAAa,GAkIUL,CAAaO,IAC5BnF,MAAM,UAJR,2BC9MGoF,GAAgC,gCAChCC,GAAgC,gCAChCC,GAAgC,gCAChCC,GACX,kCACWC,GACX,kCACWC,GACX,kCACWC,GACX,mCACWC,GACX,mCACWC,GACX,mCACWC,GACX,mCACWC,GACX,mCACWC,GACX,mCCGWC,GAA6B,SACxCC,GAEA,OAAO,SAAUC,GACfA,EAzB6C,SAC/CD,GAD+C,MAEb,CAClCjC,KAAMmC,GACNC,QAASH,GAqBEI,CAAkCJ,IAC3CK,IACGC,KAAK,4BAA6BN,GAClCO,MAAK,SAACC,GACLP,EAtByC,SAC/CD,GAD+C,MAEN,CACzCjC,KAAMmC,GACNC,QAASH,GAkBMS,CAAkCD,EAAIE,UAEhDC,OAAM,SAACC,GAAD,OACLX,EAlByC,SAC/CW,GAD+C,MAEN,CACzC7C,KAAMmC,GACNC,QAASS,GAcMC,CAAkCD,EAAME,eAuB5CC,GAA+B,WAC1C,OAAO,SAAUd,EAA4Be,GAC3Cf,EApBsF,CACxFlC,KAAMmC,KAoBJG,IACGY,IAAyB,4BACzBV,MAAK,SAACW,GAAD,OACJjB,GAnBND,EAmBmDkB,EAASR,KAlBjB,CAC3C3C,KAAMmC,GACNC,QAASH,KAJwC,IACjDA,KAqBKW,OAAM,SAACC,GAAD,OAAWX,EAf2B,SACjDW,GADiD,MAEN,CAC3C7C,KAAMmC,GACNC,QAASS,GAWsBO,CAAoCP,SAyBxDQ,GAAgC,SAC3CpB,GAEA,OAAO,SAAUC,GAxBiC,IAClDoB,EAwBEpB,GAxBFoB,EAwBgDrB,EAAkB/E,IAvB7B,CACrC8C,KAAMmC,GACNC,QAASkB,KAsBPhB,IACGiB,OADH,mCACsCtB,EAAkB/E,MACrDsF,MAAK,SAACC,GACLP,EAtB4C,SAClDD,GADkD,MAEN,CAC5CjC,KAAMmC,GACNC,QAASH,GAkBMuB,CAAqCvB,OAE/CW,OAAM,SAACC,GAAD,OACLX,EAlB4C,SAClDW,GADkD,MAEN,CAC5C7C,KAAMmC,GACNC,QAASS,GAcMY,CAAqCZ,EAAME,eA0B/CW,GAAgC,SAC3CzB,GAEA,OAAO,SAAUC,GACfA,EAzBgD,SAClDD,GADkD,MAEb,CACrCjC,KAAMmC,GACNC,QAASH,GAqBE0B,CAAqC1B,IAC9CK,IACGsB,IADH,mCAEgC3B,EAAkB/E,KAC9C+E,GAEDO,MAAK,SAACC,GACLP,EAzB4C,SAClDD,GADkD,MAEN,CAC5CjC,KAAMmC,GACNC,QAASH,GAqBM4B,CAAqC5B,OAE/CW,OAAM,SAACC,GAAD,OACLX,EArB4C,SAClDW,GADkD,MAEN,CAC5C7C,KAAMmC,GACNC,QAASS,GAiBMiB,CAAqCjB,EAAME,eC7I/CgB,GAA2B,2BAC3BC,GAA2B,2BAC3BC,GAA2B,2BAC3BC,GAA6B,6BAC7BC,GAA6B,6BAC7BC,GAA6B,6BAC7BC,GAA8B,8BAC9BC,GAA8B,8BAC9BC,GAA8B,8BAC9BC,GAA8B,8BAC9BC,GAA8B,8BAC9BC,GAA8B,8BCY9BC,GAAwB,SAACC,GACpC,OAAO,SAAU1C,GACfA,EAvBwC,SAC1C0C,GAD0C,MAEb,CAC7B5E,KAAMmC,GACNC,QAASwC,GAmBEC,CAA6BD,IACtCtC,IACGC,KAAK,uBAAwBqC,GAC7BpC,MAAK,SAACC,GACLP,EApBoC,SAC1C0C,GAD0C,MAEN,CACpC5E,KAAMmC,GACNC,QAASwC,GAgBME,CAA6BrC,EAAIE,UAE3CC,OAAM,SAACC,GAAD,OAAWX,EAfoB,SAC1CW,GAD0C,MAEN,CACpC7C,KAAMmC,GACNC,QAASS,GAWsBkC,CAA6BlC,EAAME,eAsBvDiC,GAA0B,WACrC,OAAO,SAAU9C,EAA4Be,GAC3Cf,EApB4E,CAC9ElC,KAAMmC,KAoBJG,IACGY,IAAoB,uBACpBV,MAAK,SAACW,GAAD,OACJjB,GAnBN0C,EAmB8CzB,EAASR,KAlBjB,CACtC3C,KAAMmC,GACNC,QAASwC,KAJmC,IAC5CA,KAqBKhC,OAAM,SAACC,GAAD,OAAWX,EAfsB,SAC5CW,GAD4C,MAEN,CACtC7C,KAAMmC,GACNC,QAASS,GAWsBoC,CAA+BpC,SAyBnDqC,GAA2B,SAACN,GACvC,OAAO,SAAU1C,GAtB4B,IAC7CiD,EAsBEjD,GAtBFiD,EAsB2CP,EAAa1H,IArBxB,CAChC8C,KAAMmC,GACNC,QAAS+C,KAoBP7C,IACGiB,OADH,8BACiCqB,EAAa1H,MAC3CsF,MAAK,SAACC,GACLP,EApBuC,SAC7C0C,GAD6C,MAEN,CACvC5E,KAAMmC,GACNC,QAASwC,GAgBMQ,CAAgCR,OAE1ChC,OAAM,SAACC,GAAD,OACLX,EAhBuC,SAC7CW,GAD6C,MAEN,CACvC7C,KAAMmC,GACNC,QAASS,GAYMwC,CAAgCxC,EAAME,eA0B1CuC,GAA2B,SAACV,GACvC,OAAO,SAAU1C,GACfA,EAvB2C,SAC7C0C,GAD6C,MAEb,CAChC5E,KAAMmC,GACNC,QAASwC,GAmBEW,CAAgCX,IACzCtC,IACGsB,IADH,8BAC8BgB,EAAa1H,KAAO0H,GAC/CpC,MAAK,SAACC,GACLP,EApBuC,SAC7C0C,GAD6C,MAEN,CACvC5E,KAAMmC,GACNC,QAASwC,GAgBMY,CAAgCZ,OAE1ChC,OAAM,SAACC,GAAD,OACLX,EAhBuC,SAC7CW,GAD6C,MAEN,CACvC7C,KAAMmC,GACNC,QAASS,GAYM4C,CAAgC5C,EAAME,eCpHjD7J,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXqM,KAAM,CACJhM,MAAO,QACPiM,OAAQ,QACRC,QAAS,gBAEXC,MAAO,CACLlM,SAAU,OACVmM,YAAa,OACbC,UAAW,YAmEFC,GA9D0B,WACvC,IAAMlM,EAAUZ,KAChB,EAAsCa,IAAMC,UAAS,GAArD,mBAAO0D,EAAP,KAAoBuI,EAApB,KACQnN,EAAsBH,IAAtBG,kBACFoJ,EAAWgE,cAqBjB,OACE,qBAAKxN,UAAU,OAAf,SACE,eAACyN,EAAA,EAAD,CAAMC,UAAW,EAAG1N,UAAWoB,EAAQ4L,KAAvC,UACE,cAACW,EAAA,EAAD,CAAa3N,UAAU,YAAvB,oCACA,eAAC4N,EAAA,EAAD,WACE,cAAC1J,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,cAAC,IAAD,CAAWV,MAAO,CAAExC,SAAU,QAEhC,cAACiD,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,qBAAKnE,UAAWoB,EAAQ+L,MAAxB,SAAgC/M,EAAkB6C,cAGtD,cAAC2K,EAAA,EAAD,UACE,cAAC1J,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,eAAC0J,EAAA,EAAD,WACE,qBAAK7N,UAAU,cAAf,SACE,cAACkD,EAAA,EAAD,CAAQ4K,KAAK,QAAQ3K,QA7BhB,WACjBoK,GAAe,IA4BH,SACE,cAACQ,EAAA,EAAD,CAAKzK,MAAM,UAAU,aAAW,MAAhC,SACE,cAAC,IAAD,UAKN,cAAC,GAAD,CACE0B,YAAaA,EACbC,YAlCM,WAClBsI,GAAe,IAkCHrI,WA/BK,SAAC9E,GAClBmN,GAAe,GAfkB,SAACnN,GAClCoJ,EACEwE,GAAoD5N,IActD6N,CAA2B7N,IA8BfA,kBAAmBA,iBAY7B8N,GAA8B,WAClC,IAAM9M,EAAUZ,KAChB,EAAsCa,IAAMC,UAAS,GAArD,mBAAO0D,EAAP,KAAoBuI,EAApB,KACQjN,EAAiBL,IAAjBK,aACFkJ,EAAWgE,cAkBjB,OACE,qBAAKxN,UAAU,OAAf,SACE,eAACyN,EAAA,EAAD,CAAMC,UAAW,EAAG1N,UAAWoB,EAAQ4L,KAAvC,UACE,cAACW,EAAA,EAAD,CAAa3N,UAAU,YAAvB,+BACA,eAAC4N,EAAA,EAAD,WACE,cAAC1J,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,cAAC,IAAD,CAAWV,MAAO,CAAExC,SAAU,QAEhC,cAACiD,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,qBAAKnE,UAAWoB,EAAQ+L,MAAxB,SAAgC7M,EAAa2C,cAGjD,cAAC2K,EAAA,EAAD,UACE,cAAC1J,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,eAAC0J,EAAA,EAAD,WACE,qBAAK7N,UAAU,cAAf,SACE,cAACkD,EAAA,EAAD,CAAQ4K,KAAK,QAAQ3K,QA5BhB,WACjBoK,GAAe,IA2BH,SACE,cAACQ,EAAA,EAAD,CAAKzK,MAAM,UAAU,aAAW,MAAhC,SACE,cAAC,IAAD,UAKN,cAAC,GAAD,CACE0B,YAAaA,EACbC,YAjCM,WAClBsI,GAAe,IAiCHrI,WA9BK,SAAC5E,GAClBiN,GAAe,GAba,SAACjN,GAC7BkJ,EAAS2E,GAA0C7N,IAanD8N,CAAsB9N,IA6BVA,aAAcA,iB,kBCjJjB+N,GAKX,WAAYjO,GAAyB,yBAJrCgC,UAIoC,OAHpCqC,UAGoC,OAFpC0I,WAEoC,EAClCxI,KAAKvC,KAAOhC,EAAkBgC,KAC9BuC,KAAKF,KAAOrE,EAAkBqE,KAC9BE,KAAKwI,MAAQ,GCRJmB,GAKX,WAAYhO,GAAoB,yBAJhC8B,UAI+B,OAH/BgG,WAG+B,OAF/B+E,WAE+B,EAC7BxI,KAAKvC,KAAO9B,EAAa8B,KACzBuC,KAAKyD,MAAQ9H,EAAa8H,MAC1BzD,KAAKwI,MAAQ,GCuEFoB,GA3D2B,WACxC,IAAQnO,EAAsBH,IAAtBG,kBACFoJ,EAAWgE,cAEbgB,EAA2BpO,EAAkBoF,KAAI,SAAChD,GACpD,OAAO,IAAI6L,GAAyB,CAClC5J,KAAMjC,EAAKiC,KACXrC,KAAMI,EAAKJ,UAGXP,EAAc,IAAIC,KACtBD,EAAYE,QAAQF,EAAYG,UAAY,GAC5C,IAAIC,EAAsBJ,EAAYK,cAAcC,MAAM,EAAG,IAEzDC,EAAO,IAAIN,KACfM,EAAKL,QAAQK,EAAKJ,UAAY,GAC9B,IAAIyM,EAAe,IAAI3M,KAAKM,GAAMF,cAAcC,MAAM,EAAG,IAErDuM,EAAwBF,EAAyBjM,QACnD,SAACC,GAAD,OAAUA,EAAKJ,MAAQqM,GAAgBjM,EAAKJ,MAAQH,KAGtDe,qBAAU,WACRwG,EAASwE,QACR,IAEH,IAAMjE,EAAM4E,MAAMC,KAChBF,EAAsBG,QACpB,SAACC,EAAD,OAAM1M,EAAN,EAAMA,KAAM+K,EAAZ,EAAYA,MAAZ,OACE2B,EAAEC,IACA3M,EAAK4M,WAAWC,OAAO,EAAG,KACzBH,EAAEtE,IAAIpI,EAAK4M,WAAWC,OAAO,EAAG,MAAQ,GAAK9B,KAElD,IAAI+B,MAEN,yCAAoB,CAAE9M,KAAtB,KAA4B+K,MAA5B,SAGF,OACE,gCACE,eAACgC,EAAA,EAAD,WACE,cAACvB,EAAA,EAAD,UACE,cAAC,IAAD,CAAM5N,UAAU,MAAMoP,GAAG,yBAAzB,wBAIF,eAAC,KAAD,CAAOnF,KAAMF,EAAKkD,OAAQ,IAA1B,UACE,cAAC,KAAD,IACA,cAAC,KAAD,IACA,cAAC,KAAD,CAAWoC,WAAW,QAAQC,cAAc,SAC5C,cAAC,KAAD,CAAOC,KAAK,+BACZ,cAAC,KAAD,UAGJ,2BAOAC,GAA+B,WACnC,IAAQlP,EAAiBL,IAAjBK,aACFkJ,EAAWgE,cAEbiC,EAAsBnP,EAAakF,KAAI,SAAChD,GAC1C,OAAO,IAAI8L,GAAoB,CAC7BlG,MAAO5F,EAAK4F,MACZhG,KAAMI,EAAKJ,UAGXP,EAAc,IAAIC,KACtBD,EAAYE,QAAQF,EAAYG,UAAY,GAC5C,IAAIC,EAAsBJ,EAAYK,cAAcC,MAAM,EAAG,IAEzDC,EAAO,IAAIN,KACfM,EAAKL,QAAQK,EAAKJ,UAAY,GAC9B,IAAIyM,EAAe,IAAI3M,KAAKM,GAAMF,cAAcC,MAAM,EAAG,IAErDuN,EAAmBD,EAAoBlN,QACzC,SAACC,GAAD,OAAUA,EAAKJ,MAAQqM,GAAgBjM,EAAKJ,MAAQH,KAGtDe,qBAAU,WACRwG,EAAS2E,QACR,IAEH,IAAMpE,EAAM4E,MAAMC,KAChBc,EAAiBb,QACf,SAACC,EAAD,OAAM1M,EAAN,EAAMA,KAAM+K,EAAZ,EAAYA,MAAZ,OACE2B,EAAEC,IACA3M,EAAK4M,WAAWC,OAAO,EAAG,KACzBH,EAAEtE,IAAIpI,EAAK4M,WAAWC,OAAO,EAAG,MAAQ,GAAK9B,KAElD,IAAI+B,MAEN,yCAAoB,CAAE9M,KAAtB,KAA4B+K,MAA5B,SAGF,OACE,gCACE,eAACgC,EAAA,EAAD,WACE,cAACvB,EAAA,EAAD,UACE,cAAC,IAAD,CAAM5N,UAAU,MAAMoP,GAAG,oBAAzB,wBAIF,eAAC,KAAD,CAAOnF,KAAMF,EAAKkD,OAAQ,IAA1B,UACE,cAAC,KAAD,IACA,cAAC,KAAD,IACA,cAAC,KAAD,CAAWoC,WAAW,QAAQC,cAAc,SAC5C,cAAC,KAAD,CAAOC,KAAK,0BACZ,cAAC,KAAD,UAGJ,2BCtGSI,GA3BG,WAChB,OACE,sBAAK3P,UAAU,OAAf,UACE,8BACE,eAACkE,EAAA,EAAD,CAAKC,GAAI,GAAT,UACE,cAACD,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,cAAC,GAAD,MAEF,cAACD,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,cAAC,GAAD,WAIN,8BACE,eAACD,EAAA,EAAD,CAAKC,GAAI,GAAT,UACE,cAACD,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,cAAC,GAAD,MAEF,cAACD,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,cAAC,GAAD,e,qBCdN3D,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXiE,MAAO,CACL3D,SAAU,QAEZkG,MAAO,CACLlG,SAAU,QAEZ2O,SAAU,CACRC,WAAY,eAKZC,GAAkD,CACtD,CACElL,MAAO,KACPmL,MAAO,KACPC,QAAQ,EACRC,UAAW,CACTC,UAAW,WAGf,CACEtL,MAAO,OACPmL,MAAO,OACPE,UAAW,CACTC,UAAW,UAEbC,SAAU,SAACC,GAAD,MAA8B,KAAjBA,EAAQ3L,OAEjC,CACEG,MAAO,OACPmL,MAAO,OACPzI,KAAM,OACN2I,UAAW,CACTC,UAAW,UAEbC,SAAU,SAACC,GAAD,OAA8B,OAAjBA,EAAQhO,OAEjC,CACEwC,MAAO,QACPmL,MAAO,QACPE,UAAW,CACTC,UAAW,UAEbC,SAAU,SAACC,GAAD,OAAaA,EAAQ1L,MAAQ,IAEzC,CACEE,MAAO,iCACPmL,MAAO,qBACPzI,KAAM,UACN2I,UAAW,CACTC,UAAW,YAgIFG,GA3H0B,WACvC,IAAMjP,EAAUZ,KACVgJ,EAAWgE,cACjB,EAAuCvN,IAA/BG,EAAR,EAAQA,kBAAmBC,EAA3B,EAA2BA,QAC3B,EAA4CgB,IAAMC,UAAS,GAA3D,mBAAOgP,EAAP,KAAuBC,EAAvB,KA4BI1O,EAAc,IAAIC,KACtBD,EAAYE,QAAQF,EAAYG,UAAY,GAC5C,IAAIC,EAAsBJ,EAAYK,cAAcC,MAAM,EAAG,IAEzDC,EAAO,IAAIN,KACfM,EAAKL,QAAQK,EAAKJ,UAAY,IAC9B,IAAIK,EAAkB,IAAIP,KAAKM,GAAMF,cAAcC,MAAM,EAAG,IAExDG,EAA6BlC,EAAkBmC,QACjD,SAACC,GAAD,OACE,IAAIV,KAAKU,EAAKJ,MAAMF,cAAcC,MAAM,EAAG,KAAOE,GAClD,IAAIP,KAAKU,EAAKJ,MAAMF,cAAcC,MAAM,EAAG,KAAOF,KAOtD,OAJAe,qBAAU,WACRwG,EAASwE,QACR,IAGD,gCACE,qBAAKhO,UAAU,iBAAf,SACE,cAAC,IAAD,CAAMoP,GAAG,QAAT,iCAEF,cAACxH,EAAA,EAAD,CACExG,QAAS,CACP+F,MAAO/F,EAAQ+F,OAEjBU,QACE,cAACC,EAAA,EAAD,CACE1G,QAAS,CACP4L,KAAM5L,EAAQwO,UAEhB7H,QAASuI,EACTjJ,SArCmB,WAC3BkJ,GAAmBD,IAqCX7L,KAAK,WACLnB,MAAM,YAGV6D,MAAM,wCAER,cAAC,KAAD,CACEvC,MACE,cAACZ,EAAA,EAAD,CAAYuC,QAAQ,KAAKvG,UAAWoB,EAAQwD,MAA5C,qCAIF4L,UAAWnQ,EACXoQ,QAASX,GACT7F,KAAMqG,EAAiBhO,EAA6BlC,EACpDsQ,SAAU,CACRC,SAAU,SAACC,GAAD,OACR,IAAIC,SAAQ,SAACC,GACXC,YAAW,WACTD,EAAQ,MA/Ea,SAAC1Q,GAClCoJ,EACEwE,GAAoD5N,IA8E1C6N,CAA2B2C,KAC1B,SAEPI,YAAa,SAACJ,EAASK,GAAV,OACX,IAAIJ,SAAQ,SAACC,GACXA,EAAQ,MAvEkB,SACpC1Q,GAEAoJ,EACEwE,GAAuD5N,IAoE/C8Q,CAA8BN,OAElCO,YAAa,SAACF,GAAD,OACX,IAAIJ,SAAQ,SAACC,GACXA,EAAQ,MApFkB,SACpC1Q,GAEAoJ,EACEwE,GAAuD5N,IAiF/CgR,CAA8BH,QAGpCxL,QAAS,CACP4L,SAAU,SAACjB,GACT,OAAKA,EAAQ3N,mBAGN,CAAEyN,UAAW,UAFX,CAAEoB,gBAAiB,YAI9BC,YAAa,CACXD,gBAAiB,UACjBhO,MAAO,OACPrC,SAAU,OACViP,UAAW,UAEbsB,iBAAkB,CAChBvQ,SAAU,WAIhB,2BChLAT,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXiE,MAAO,CACL3D,SAAU,QAEZkG,MAAO,CACLlG,SAAU,QAEZ2O,SAAU,CACRC,WAAY,eAKZC,GAA6C,CACjD,CACElL,MAAO,KACPmL,MAAO,KACPC,QAAQ,EACRC,UAAW,CACTC,UAAW,WAGf,CACEtL,MAAO,QACPmL,MAAO,QACPE,UAAW,CACTC,UAAW,UAEbC,SAAU,SAACC,GAAD,MAA+B,KAAlBA,EAAQhI,QAEjC,CACExD,MAAO,OACPmL,MAAO,OACPzI,KAAM,OACN2I,UAAW,CACTC,UAAW,UAEbC,SAAU,SAACC,GAAD,OAA8B,OAAjBA,EAAQhO,OAEjC,CACEwC,MAAO,QACPmL,MAAO,QACPE,UAAW,CACTC,UAAW,UAEbC,SAAU,SAACC,GAAD,OAAaA,EAAQ1L,OAAS,IAE1C,CACEE,MAAO,4BACPmL,MAAO,YACPzI,KAAM,UACN2I,UAAW,CACTC,UAAW,YAsHFuB,GAjHqB,WAClC,IAAMrQ,EAAUZ,KACVgJ,EAAWgE,cACjB,EAAoCvN,IAA5BK,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,UACtB,EAA4Cc,IAAMC,UAAS,GAA3D,mBAAOgP,EAAP,KAAuBC,EAAvB,KAkBI1O,EAAc,IAAIC,KACtBD,EAAYE,QAAQF,EAAYG,UAAY,GAC5C,IAAIC,EAAsBJ,EAAYK,cAAcC,MAAM,EAAG,IAEzDC,EAAO,IAAIN,KACfM,EAAKL,QAAQK,EAAKJ,UAAY,IAC9B,IAAIK,EAAkB,IAAIP,KAAKM,GAAMF,cAAcC,MAAM,EAAG,IAExDO,EAAwBpC,EAAaiC,QACvC,SAACC,GAAD,OACE,IAAIV,KAAKU,EAAKJ,MAAMF,cAAcC,MAAM,EAAG,KAAOE,GAClD,IAAIP,KAAKU,EAAKJ,MAAMF,cAAcC,MAAM,EAAG,KAAOF,KAOtD,OAJAe,qBAAU,WACRwG,EAAS2E,QACR,IAGD,gCACE,qBAAKnO,UAAU,iBAAf,SACE,cAAC,IAAD,CAAMoP,GAAG,QAAT,iCAEF,cAACxH,EAAA,EAAD,CACExG,QAAS,CACP+F,MAAO/F,EAAQ+F,OAEjBU,QACE,cAACC,EAAA,EAAD,CACE1G,QAAS,CACP4L,KAAM5L,EAAQwO,UAEhB7H,QAASuI,EACTjJ,SArCmB,WAC3BkJ,GAAmBD,IAqCX7L,KAAK,WACLnB,MAAM,YAGV6D,MAAM,wCAER,cAAC,KAAD,CACEvC,MACE,cAACZ,EAAA,EAAD,CAAYuC,QAAQ,KAAKvG,UAAWoB,EAAQwD,MAA5C,gCAIF4L,UAAWjQ,EACXkQ,QAASX,GACT7F,KAAMqG,EAAiB5N,EAAwBpC,EAC/CoQ,SAAU,CACRC,SAAU,SAACC,GAAD,OACR,IAAIC,SAAQ,SAACC,GACXC,YAAW,WACTD,EAAQ,MArEQ,SAACxQ,GAC7BkJ,EAAS2E,GAA0C7N,IAqEvC8N,CAAsBwC,KACrB,SAEPI,YAAa,SAACJ,EAASK,GAAV,OACX,IAAIJ,SAAQ,SAACC,GACXA,EAAQ,MAnEa,SAACxQ,GAChCkJ,EAAS2E,GAA6C7N,IAmE5CoR,CAAyBd,OAE7BO,YAAa,SAACF,GAAD,OACX,IAAIJ,SAAQ,SAACC,GACXA,EAAQ,MA5Ea,SAACxQ,GAChCkJ,EAAS2E,GAA6C7N,IA4E5CqR,CAAyBV,QAG/BxL,QAAS,CACP4L,SAAU,SAACjB,GACT,OAAIA,EAAQzN,UACH,CAAE2O,gBAAiB,WAErB,CAAEpB,UAAW,WAEtBqB,YAAa,CACXD,gBAAiB,UACjBhO,MAAO,OACPrC,SAAU,OACViP,UAAW,UAEbsB,iBAAkB,CAChBvQ,SAAU,WAIhB,2BC1JS2Q,GAlBM,WACnB,OACE,cAACxL,EAAA,EAAD,CACExD,MAAM,EACNiP,YAAU,EACVxL,sBAAoB,EACpB,kBAAgB,oBAJlB,SAME,eAACG,EAAA,EAAD,WACE,qBAAKxG,UAAU,WAAf,4BACA,cAAC,IAAD,CAAMA,UAAU,QAAQoP,GAAG,IAA3B,qC,OCwBO0C,OA3Bf,WACE,OACE,qBAAK9R,UAAU,MAAf,SACE,cAACmP,EAAA,EAAD,CAAOzB,UAAW,GAAI1N,UAAU,OAAhC,SACE,eAACkE,EAAA,EAAD,CAAKC,GAAI,GAAT,UACE,cAAC,EAAD,IACA,cAACD,EAAA,EAAD,CAAKC,GAAI,GAAInE,UAAU,cAAvB,SACE,cAAC,EAAD,MAEF,cAACkE,EAAA,EAAD,CAAKC,GAAI,GAAT,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO4N,OAAK,EAACC,KAAK,IAAIC,UAAWtC,KACjC,cAAC,IAAD,CAAUf,KAAK,QAAQQ,GAAG,MAC1B,cAAC,IAAD,CACE4C,KAAK,yBACLC,UAAW5B,KAEb,cAAC,IAAD,CAAO2B,KAAK,oBAAoBC,UAAWR,KAC3C,cAAC,IAAD,CAAOO,KAAK,IAAIC,UAAWL,kBChB1BM,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBtI,MAAK,YAAkD,IAA/CuI,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,mBCYCO,GAlBuB,SAACC,GAAD,OAClC,SAAwCC,GAcpC,OADcD,GAZS,SAACxS,EAAY0S,GAChC,IAAMC,EAAQC,YAAYC,MAC1BC,QAAQC,IAAI,yBAA0BJ,GACtCG,QAAQC,IAAI,0BACZ,IAAMC,EAAWP,EAAQzS,EAAO0S,GAC1BO,EAAML,YAAYC,MACxBC,QAAQC,IAAI,uBAAwBE,GACpC,IAVGvN,EAUGwN,GAVHxN,EAUgBuN,EAAMN,EAVJQ,KAAKC,MAAc,IAAR1N,GAAe,KAY/C,OADAoN,QAAQC,IAAI,wBAAyBG,GAC9BF,OCLbK,GAAuC,CAC3CnT,SAAS,EACTD,kBAAmB,GACnB+J,MAAO,ICHHqJ,GAAkC,CACtCjT,WAAW,EACXD,aAAc,GACd6J,MAAO,ICHHsJ,IADYC,aAAQhB,IACTiB,aAAgB,CAC/BvT,kBFKuC,WAGX,IAF5BD,EAE2B,uDAFnBqT,GACRX,EAC2B,uCAC3B,OAAQA,EAAOvL,MACb,KAAKmC,GACH,OAAO,2BACFtJ,GADL,IAEEgK,MAAO,GACP9J,SAAS,IAEb,KAAKoJ,GACH,OAAO,2BACFtJ,GADL,IAEEC,kBAAkB,GAAD,mBAAMD,EAAMC,mBAAZ,CAA+ByS,EAAOnJ,UACvDS,MAAO,GACP9J,SAAS,IAEb,KAAKoJ,GACH,OAAO,2BACFtJ,GADL,IAEEgK,MAAO0I,EAAOnJ,QACdrJ,SAAS,IAEb,KAAKoJ,GACH,OAAO,2BACFtJ,GADL,IAEEE,SAAS,IAEb,KAAKoJ,GACH,OAAO,2BACFtJ,GADL,IAEEC,kBAAmByS,EAAOnJ,QAC1BS,MAAO,GACP9J,SAAS,IAEb,KAAKoJ,GACH,OAAO,2BACFtJ,GADL,IAEEC,kBAAmB,GACnB+J,MAAO0I,EAAOnJ,QACdrJ,SAAS,IAEb,KAAKoJ,GACH,OAAO,2BACFtJ,GADL,IAEEgK,MAAO,GACP9J,SAAS,IAEb,KAAKoJ,GACH,OAAO,2BACFtJ,GADL,IAEEC,kBAAmBD,EAAMC,kBAAkBmC,QACzC,SAACnC,GAAD,OAAuBA,EAAkBoE,MAAQqO,EAAOnJ,QAAQlF,OAElE2F,MAAO,GACP9J,SAAS,IAEb,KAAKoJ,GACH,OAAO,2BACFtJ,GADL,IAEEgK,MAAO0I,EAAOnJ,QACdrJ,SAAS,IAEb,KAAKoJ,GACH,OAAO,2BACFtJ,GADL,IAEEgK,MAAO,GACP9J,SAAS,IAEb,KAAKoJ,GACH,IAAMrJ,EAAiB,YAAOD,EAAMC,mBAC9BwT,EAAQxT,EAAkByT,WAC9B,SAACC,GAAD,OAAOA,EAAEtP,KAAOqO,EAAOnJ,QAAQlF,OAOjC,OALIoP,GAAS,IACXxT,EAAkBwT,GAAlB,eACKf,EAAOnJ,UAGP,2BACFvJ,GADL,IAEEC,kBAAmBA,EACnB+J,MAAO,GACP9J,SAAS,IAEb,KAAKoJ,GACH,OAAO,2BACFtJ,GADL,IAEEgK,MAAO0I,EAAOnJ,QACdrJ,SAAS,IAEb,QACE,OAAOF,IEjGXG,aDIkC,WAGX,IAFvBH,EAEsB,uDAFdqT,GACRX,EACsB,uCACtB,OAAQA,EAAOvL,MACb,KAAKmC,GACH,OAAO,2BACFtJ,GADL,IAEEgK,MAAO,GACP5J,WAAW,IAEf,KAAKkJ,GACH,OAAO,2BACFtJ,GADL,IAEEG,aAAa,GAAD,mBAAMH,EAAMG,cAAZ,CAA0BuS,EAAOnJ,UAC7CS,MAAO,GACP5J,WAAW,IAEf,KAAKkJ,GACH,OAAO,2BACFtJ,GADL,IAEEgK,MAAO0I,EAAOnJ,QACdnJ,WAAW,IAEf,KAAKkJ,GACH,OAAO,2BACFtJ,GADL,IAEEI,WAAW,IAEf,KAAKkJ,GACH,OAAO,2BACFtJ,GADL,IAEEG,aAAcuS,EAAOnJ,QACrBS,MAAO,GACP5J,WAAW,IAEf,KAAKkJ,GACH,OAAO,2BACFtJ,GADL,IAEEG,aAAc,GACd6J,MAAO0I,EAAOnJ,QACdnJ,WAAW,IAEf,KAAKkJ,GACH,OAAO,2BACFtJ,GADL,IAEEgK,MAAO,GACP5J,WAAW,IAEf,KAAKkJ,GACH,OAAO,2BACFtJ,GADL,IAEEG,aAAcH,EAAMG,aAAaiC,QAC/B,SAACjC,GAAD,OAAkBA,EAAakE,MAAQqO,EAAOnJ,QAAQlF,OAExD2F,MAAO,GACP5J,WAAW,IAEf,KAAKkJ,GACH,OAAO,2BACFtJ,GADL,IAEEgK,MAAO0I,EAAOnJ,QACdnJ,WAAW,IAEf,KAAKkJ,GACH,OAAO,2BACFtJ,GADL,IAEEgK,MAAO,GACP5J,WAAW,IAEf,KAAKkJ,GACH,IAAMnJ,EAAY,YAAOH,EAAMG,cACzBsT,EAAQtT,EAAauT,WAAU,SAACC,GAAD,OAAOA,EAAEtP,KAAOqO,EAAOnJ,QAAQlF,OAMpE,OALIoP,GAAS,IACXtT,EAAasT,GAAb,eACKf,EAAOnJ,UAGP,2BACFvJ,GADL,IAEEG,aAAcA,EACd6J,MAAO,GACP5J,WAAW,IAEf,KAAKkJ,GACH,OAAO,2BACFtJ,GADL,IAEEgK,MAAO0I,EAAOnJ,QACdnJ,WAAW,IAEf,QACE,OAAOJ,OCtFE4T,GANDpB,aACZc,GAEAO,aAAgBC,OCRlBrK,IAAMsK,SAASC,QAAU,wBAEzBC,IAASC,OACP,cAAC,IAAD,CAAUN,MAAOO,GAAjB,SACE,cAAC,IAAD,UACE,cAAC,GAAD,QAGJC,SAASC,eAAe,SAM1BtC,M","file":"static/js/main.3b2076c9.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../components/Header.css';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className='header'>\r\n      <p>Covid Tracker Exposure Tool</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","export default __webpack_public_path__ + \"static/media/Mikasa_Ackermann.3f617e6a.png\";","import { useSelector } from 'react-redux';\r\nimport { RootState } from '../models/RootState';\r\nimport { VisitedPlaceRootState } from '../models/RootState';\r\nimport { SocialInteraction } from '../models/SocialInteraction';\r\nimport { VisitedPlace } from '../models/VisitedPlace';\r\nimport { SocialInteractionState } from '../redux/reducers/SocialInteractionReducers';\r\nimport { VisitedPlaceState } from '../redux/reducers/VisitedPlaceReducers';\r\n\r\nexport interface UseDataHook {\r\n  socialInteraction: Array<SocialInteraction>;\r\n  visitedPlace: Array<VisitedPlace>;\r\n  loading: boolean | undefined;\r\n  isloading: boolean | undefined;\r\n}\r\n\r\nexport const useData = (): UseDataHook => {\r\n  const { socialInteraction, loading } = useSelector<\r\n    RootState,\r\n    SocialInteractionState\r\n  >((state) => state.socialInteraction);\r\n  const { visitedPlace, isloading } = useSelector<\r\n    VisitedPlaceRootState,\r\n    VisitedPlaceState\r\n  >((state) => state.visitedPlace);\r\n\r\n  return {\r\n    socialInteraction,\r\n    visitedPlace,\r\n    loading,\r\n    isloading,\r\n  };\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport { Badge, Button, Popover, Typography } from '@material-ui/core';\r\nimport ReportIcon from '@material-ui/icons/Report';\r\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\r\nimport '../components/Header.css';\r\nimport { useData } from '../hooks/useData';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    errorTypo: {\r\n      padding: theme.spacing(2),\r\n      background: '#FCCFCC',\r\n      width: '300px',\r\n      fontSize: '15px',\r\n    },\r\n    goodTypo: {\r\n      padding: theme.spacing(2),\r\n      background: '#CEF7C2',\r\n      width: '300px',\r\n      fontSize: '15px',\r\n    },\r\n  })\r\n);\r\n\r\nconst NotificationBadge = () => {\r\n  const { socialInteraction, visitedPlace } = useData();\r\n  const classes = useStyles();\r\n  const [\r\n    notificationMessageSocial,\r\n    setNotificationMessageSocial,\r\n  ] = React.useState<string>('');\r\n  const [\r\n    notificationMessagePlace,\r\n    setNotificationMessagePlace,\r\n  ] = React.useState<string>('');\r\n  const [anchorEl, setAnchorEl] = React.useState<HTMLButtonElement | null>(\r\n    null\r\n  );\r\n\r\n  const warningMessageSocial =\r\n    'You did not practice social distancing for the last 14 days. Stay at home and maintain 1-2 meters away from other people.';\r\n\r\n  const goodMessageSocial =\r\n    'You are maintaining proper social distancing. Keep it up.';\r\n\r\n  const warningMessagePlace =\r\n    'You have been exposed to a crowded place for the last 14 days. Try to avoid crowded places to minimize your exposure risk';\r\n\r\n  const goodMessagePlace =\r\n    'Thank you for helping to stop spread the virus by staying home.';\r\n\r\n  let currentDate = new Date();\r\n  currentDate.setDate(currentDate.getDate() + 1);\r\n  let dayAfterCurrentDate = currentDate.toISOString().slice(0, 10);\r\n\r\n  let date = new Date();\r\n  date.setDate(date.getDate() - 14);\r\n  let fourteenDaysAgo = new Date(date).toISOString().slice(0, 10);\r\n\r\n  let socialInteractionFor14days = socialInteraction.filter(\r\n    (item) =>\r\n      new Date(item.date).toISOString().slice(0, 10) >= fourteenDaysAgo &&\r\n      new Date(item.date).toISOString().slice(0, 10) <= dayAfterCurrentDate &&\r\n      item.isSocialDistancing === false\r\n  );\r\n\r\n  let visitedPlaceFor14days = visitedPlace.filter(\r\n    (item) =>\r\n      new Date(item.date).toISOString().slice(0, 10) >= fourteenDaysAgo &&\r\n      new Date(item.date).toISOString().slice(0, 10) <= dayAfterCurrentDate &&\r\n      item.isCrowded === true\r\n  );\r\n\r\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? 'simple-popover' : undefined;\r\n\r\n  useEffect(() => {\r\n    socialInteractionFor14days.length > 0 && visitedPlaceFor14days !== null\r\n      ? setNotificationMessageSocial(warningMessageSocial)\r\n      : setNotificationMessageSocial(goodMessageSocial);\r\n\r\n    visitedPlaceFor14days.length > 0 && visitedPlaceFor14days !== null\r\n      ? setNotificationMessagePlace(warningMessagePlace)\r\n      : setNotificationMessagePlace(goodMessagePlace);\r\n  }, [socialInteraction, visitedPlace]);\r\n\r\n  return (\r\n    <div>\r\n      <Button onClick={handleClick} color='primary'>\r\n        <Badge badgeContent={2} color='secondary'>\r\n          <NotificationsActiveIcon style={{ fontSize: '50px' }} />\r\n        </Badge>\r\n      </Button>\r\n      <Popover\r\n        id={id}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        onClose={handleClose}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'left',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'right',\r\n        }}\r\n      >\r\n        <Typography\r\n          className={\r\n            socialInteractionFor14days.length > 0\r\n              ? classes.errorTypo\r\n              : classes.goodTypo\r\n          }\r\n        >\r\n          {socialInteractionFor14days.length > 0 ? <ReportIcon /> : ''}\r\n          {notificationMessageSocial}\r\n        </Typography>\r\n        <Typography\r\n          className={\r\n            visitedPlaceFor14days.length > 0\r\n              ? classes.errorTypo\r\n              : classes.goodTypo\r\n          }\r\n        >\r\n          {visitedPlaceFor14days.length > 0 ? <ReportIcon /> : ''}\r\n          {notificationMessagePlace}\r\n        </Typography>\r\n      </Popover>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotificationBadge;\r\n","import React from 'react';\r\nimport { Col } from 'react-bootstrap';\r\nimport '../components/Header.css';\r\nimport ProfilePicture from '../assets/Mikasa_Ackermann.png';\r\nimport NotificationBadge from '../components/NotificationBadge';\r\n\r\nconst Profile = () => {\r\n  return (\r\n    <div className='profile'>\r\n      <Col md={3}>\r\n        <img src={ProfilePicture} alt='logo' className='profile-picture' />\r\n      </Col>\r\n      <Col md={6} className='profile-text'>\r\n        <p>Mikasa Ackerman</p>\r\n      </Col>\r\n      <Col md={1}>\r\n        <NotificationBadge />\r\n      </Col>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","export class SocialInteraction {\r\n  _id: string;\r\n  name: string;\r\n  date: Date;\r\n  hours: number;\r\n  isSocialDistancing: boolean;\r\n\r\n  constructor(socialInteraction: any) {\r\n    this._id = socialInteraction._id;\r\n    this.name = socialInteraction.name;\r\n    this.date = socialInteraction.date;\r\n    this.hours = socialInteraction.hours;\r\n    this.isSocialDistancing = socialInteraction.isSocialDistancing;\r\n  }\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField,\r\n  Button,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport '../components/Dashboard.css';\r\nimport { SocialInteraction } from '../models/SocialInteraction';\r\n\r\ninterface Props {\r\n  modalStatus: boolean;\r\n  handleClose: () => void;\r\n  handleSave: (socialInteraction: any) => void;\r\n  socialInteraction: SocialInteraction[];\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    title: {\r\n      fontSize: '25px',\r\n    },\r\n    option: {\r\n      fontSize: '13px',\r\n    },\r\n    input: {\r\n      fontSize: '13px',\r\n    },\r\n  })\r\n);\r\n\r\nconst SocialInteractionsModal: React.FC<Props> = ({\r\n  modalStatus,\r\n  handleClose,\r\n  handleSave,\r\n  socialInteraction,\r\n}) => {\r\n  const classes = useStyles();\r\n  const [name, setName] = React.useState<string>();\r\n  const [date, setDate] = React.useState<Date>();\r\n  const [hours, setHours] = React.useState<string>();\r\n  const [isSocialDistancing, setIsSocialDistancing] = React.useState(false);\r\n  const [btnDisable, setBtnDisable] = React.useState(true);\r\n  const [options, setOptions] = React.useState<string[]>(\r\n    socialInteraction.map((item) => {\r\n      return item.name;\r\n    })\r\n  );\r\n\r\n  const handleNameChange = (event: any) => {\r\n    setName(event.target.value);\r\n  };\r\n  const handleDateChange = (event: any) => {\r\n    setDate(event.target.value);\r\n  };\r\n  const handleHoursChange = (event: any) => {\r\n    setHours(event.target.value);\r\n  };\r\n  const handleCheckBoxChange = () => {\r\n    setIsSocialDistancing(!isSocialDistancing);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    handleClose();\r\n    setName('');\r\n    setDate(undefined);\r\n    setHours('');\r\n    setIsSocialDistancing(false);\r\n  };\r\n\r\n  const handleSubmit = (newSocialInteraction: SocialInteraction) => {\r\n    handleSave(newSocialInteraction);\r\n    setName('');\r\n    setDate(new Date());\r\n    setHours('');\r\n    setIsSocialDistancing(false);\r\n  };\r\n\r\n  let optionList = socialInteraction.map((item) => {\r\n    return item.name;\r\n  });\r\n\r\n  const getDistinctArray = (optionList: string[]) => {\r\n    let optionsDistinct = [...new Set(optionList)];\r\n    return optionsDistinct;\r\n  };\r\n\r\n  let dateNow = new Date();\r\n  dateNow.setDate(dateNow.getDate() + 1);\r\n  let dateToday = new Date(dateNow).toISOString().slice(0, 10);\r\n\r\n  useEffect(() => {\r\n    setOptions(getDistinctArray(optionList));\r\n    name && date && hours ? setBtnDisable(false) : setBtnDisable(true);\r\n  }, [socialInteraction, name, date, hours]);\r\n\r\n  let newSocialInteraction = new SocialInteraction({\r\n    name,\r\n    date,\r\n    hours,\r\n    isSocialDistancing,\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={modalStatus}\r\n        onClose={handleClose}\r\n        disableBackdropClick\r\n        aria-labelledby='form-dialog-title'\r\n      >\r\n        <DialogTitle id='form-dialog-title'>\r\n          <Typography variant='h6' className={classes.title}>\r\n            Add Social Interaction\r\n          </Typography>\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <div>\r\n            <Autocomplete\r\n              classes={{\r\n                option: classes.option,\r\n                input: classes.input,\r\n              }}\r\n              id='autocomplete-name'\r\n              disableClearable\r\n              clearOnBlur={false}\r\n              options={options.map((option) => option)}\r\n              onSelect={handleNameChange}\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  InputLabelProps={{ style: { fontSize: 13 } }}\r\n                  required\r\n                  helperText={' '}\r\n                  variant='outlined'\r\n                  id='name'\r\n                  label='Name'\r\n                  fullWidth\r\n                  onChange={handleNameChange}\r\n                />\r\n              )}\r\n            />\r\n            <TextField\r\n              required\r\n              helperText=' '\r\n              id='date'\r\n              variant='outlined'\r\n              type='Date'\r\n              fullWidth\r\n              InputProps={{\r\n                inputProps: {\r\n                  max: dateToday,\r\n                },\r\n                classes: {\r\n                  input: classes.input,\r\n                },\r\n              }}\r\n              InputLabelProps={{ style: { fontSize: 13 } }}\r\n              onChange={handleDateChange}\r\n            />\r\n            <TextField\r\n              required\r\n              helperText=' '\r\n              variant='outlined'\r\n              id='hours'\r\n              label='Hours'\r\n              type='Number'\r\n              fullWidth\r\n              InputProps={{\r\n                inputProps: {\r\n                  min: 1,\r\n                  max: 24,\r\n                  autoComplete: 'off',\r\n                },\r\n                classes: {\r\n                  input: classes.input,\r\n                },\r\n              }}\r\n              InputLabelProps={{ style: { fontSize: 13 } }}\r\n              onChange={handleHoursChange}\r\n            />\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  checked={isSocialDistancing}\r\n                  onChange={handleCheckBoxChange}\r\n                  name='checkedB'\r\n                  color='primary'\r\n                />\r\n              }\r\n              label='Is Social Distancing Observed?'\r\n            />\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            className={classes.input}\r\n            onClick={handleCancel}\r\n            color='primary'\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            className={classes.input}\r\n            disabled={btnDisable}\r\n            onClick={() => handleSubmit(newSocialInteraction)}\r\n            color='primary'\r\n          >\r\n            Save\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SocialInteractionsModal;\r\n","export class VisitedPlace {\r\n  _id: string;\r\n  place: string;\r\n  date: Date;\r\n  hours: number;\r\n  isCrowded: boolean;\r\n\r\n  constructor(visitedPlace: any) {\r\n    this._id = visitedPlace._id;\r\n    this.place = visitedPlace.place;\r\n    this.date = visitedPlace.date;\r\n    this.hours = visitedPlace.hours;\r\n    this.isCrowded = visitedPlace.isCrowded;\r\n  }\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField,\r\n  Button,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport '../components/Dashboard.css';\r\nimport { VisitedPlace } from '../models/VisitedPlace';\r\n\r\ninterface Props {\r\n  modalStatus: boolean;\r\n  handleClose: () => void;\r\n  handleSave: (visitedPlace: any) => void;\r\n  visitedPlace: VisitedPlace[];\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    title: {\r\n      fontSize: '25px',\r\n    },\r\n    option: {\r\n      fontSize: '13px',\r\n    },\r\n    input: {\r\n      fontSize: '13px',\r\n    },\r\n  })\r\n);\r\n\r\nconst VisitedPlacesModal: React.FC<Props> = ({\r\n  modalStatus,\r\n  handleClose,\r\n  handleSave,\r\n  visitedPlace,\r\n}) => {\r\n  const classes = useStyles();\r\n  const [place, setPlace] = React.useState<string>();\r\n  const [date, setDate] = React.useState<Date>();\r\n  const [hours, setHours] = React.useState<string>();\r\n  const [isCrowded, setIsCrowded] = React.useState(false);\r\n  const [btnDisable, setBtnDisable] = React.useState(true);\r\n  const [options, setOptions] = React.useState<string[]>(\r\n    visitedPlace.map((item) => {\r\n      return item.place;\r\n    })\r\n  );\r\n\r\n  const handlePlaceChange = (event: any) => {\r\n    setPlace(event.target.value);\r\n  };\r\n  const handleDateChange = (event: any) => {\r\n    setDate(event.target.value);\r\n  };\r\n  const handleHoursChange = (event: any) => {\r\n    setHours(event.target.value);\r\n  };\r\n  const handleCheckBoxChange = () => {\r\n    setIsCrowded(!isCrowded);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    handleClose();\r\n    setPlace('');\r\n    setDate(undefined);\r\n    setHours('');\r\n    setIsCrowded(false);\r\n  };\r\n\r\n  const handleSubmit = (newVisitedPlace: VisitedPlace) => {\r\n    handleSave(newVisitedPlace);\r\n    setPlace('');\r\n    setDate(new Date());\r\n    setHours('');\r\n    setIsCrowded(false);\r\n  };\r\n\r\n  let optionList = visitedPlace.map((item) => {\r\n    return item.place;\r\n  });\r\n\r\n  const getDistinctArray = (optionList: string[]) => {\r\n    let optionsDistinct = [...new Set(optionList)];\r\n    return optionsDistinct;\r\n  };\r\n\r\n  let dateNow = new Date();\r\n  dateNow.setDate(dateNow.getDate() + 1);\r\n  let dateToday = new Date(dateNow).toISOString().slice(0, 10);\r\n\r\n  useEffect(() => {\r\n    setOptions(getDistinctArray(optionList));\r\n    place && date && hours ? setBtnDisable(false) : setBtnDisable(true);\r\n  }, [visitedPlace, place, date, hours]);\r\n\r\n  let newVisitedPlace = new VisitedPlace({\r\n    place,\r\n    date,\r\n    hours,\r\n    isCrowded,\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={modalStatus}\r\n        onClose={handleClose}\r\n        disableBackdropClick\r\n        aria-labelledby='form-dialog-title'\r\n      >\r\n        <DialogTitle id='form-dialog-title'>\r\n          <Typography variant='h6' className={classes.title}>\r\n            Add Visited Place\r\n          </Typography>\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <div>\r\n            <Autocomplete\r\n              classes={{\r\n                option: classes.option,\r\n                input: classes.input,\r\n              }}\r\n              id='autocomplete-place'\r\n              disableClearable\r\n              clearOnBlur={false}\r\n              options={options.map((option) => option)}\r\n              onSelect={handlePlaceChange}\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  InputLabelProps={{ style: { fontSize: 13 } }}\r\n                  required\r\n                  helperText={' '}\r\n                  variant='outlined'\r\n                  id='place'\r\n                  label='Place'\r\n                  fullWidth\r\n                  onChange={handlePlaceChange}\r\n                />\r\n              )}\r\n            />\r\n            <TextField\r\n              required\r\n              helperText=' '\r\n              id='date'\r\n              variant='outlined'\r\n              type='Date'\r\n              fullWidth\r\n              InputProps={{\r\n                inputProps: {\r\n                  max: dateToday,\r\n                },\r\n                classes: {\r\n                  input: classes.input,\r\n                },\r\n              }}\r\n              InputLabelProps={{ style: { fontSize: 13 } }}\r\n              onChange={handleDateChange}\r\n            />\r\n            <TextField\r\n              required\r\n              helperText=' '\r\n              variant='outlined'\r\n              id='hours'\r\n              label='Hours'\r\n              type='Number'\r\n              fullWidth\r\n              InputProps={{\r\n                inputProps: {\r\n                  min: 1,\r\n                  max: 24,\r\n                  autoComplete: 'off',\r\n                },\r\n                classes: {\r\n                  input: classes.input,\r\n                },\r\n              }}\r\n              InputLabelProps={{ style: { fontSize: 13 } }}\r\n              onChange={handleHoursChange}\r\n            />\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  checked={isCrowded}\r\n                  onChange={handleCheckBoxChange}\r\n                  name='checkedB'\r\n                  color='primary'\r\n                />\r\n              }\r\n              label='Is Visited Place Crowded?'\r\n            />\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            className={classes.input}\r\n            onClick={handleCancel}\r\n            color='primary'\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            className={classes.input}\r\n            disabled={btnDisable}\r\n            onClick={() => handleSubmit(newVisitedPlace)}\r\n            color='primary'\r\n          >\r\n            Save\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VisitedPlacesModal;\r\n","import { Action } from 'redux';\r\nimport { SocialInteraction } from '../../models/SocialInteraction';\r\n\r\nexport const ADD_SOCIALINTERACTION_REQUEST = 'ADD_SOCIALINTERACTION_REQUEST';\r\nexport const ADD_SOCIALINTERACTION_SUCCESS = 'ADD_SOCIALINTERACTION_SUCCESS';\r\nexport const ADD_SOCIALINTERACTION_FAILURE = 'ADD_SOCIALINTERACTION_FAILURE';\r\nexport const FETCH_SOCIALINTERACTION_REQUEST =\r\n  'FETCH_SOCIALINTERACTION_REQUEST';\r\nexport const FETCH_SOCIALINTERACTION_SUCCESS =\r\n  'FETCH_SOCIALINTERACTION_SUCCESS';\r\nexport const FETCH_SOCIALINTERACTION_FAILURE =\r\n  'FETCH_SOCIALINTERACTION_FAILURE';\r\nexport const DELETE_SOCIALINTERACTION_REQUEST =\r\n  'DELETE_SOCIALINTERACTION_REQUEST';\r\nexport const DELETE_SOCIALINTERACTION_SUCCESS =\r\n  'DELETE_SOCIALINTERACTION_SUCCESS';\r\nexport const DELETE_SOCIALINTERACTION_FAILURE =\r\n  'DELETE_SOCIALINTERACTION_FAILURE';\r\nexport const UPDATE_SOCIALINTERACTION_REQUEST =\r\n  'UPDATE_SOCIALINTERACTION_REQUEST';\r\nexport const UPDATE_SOCIALINTERACTION_SUCCESS =\r\n  'UPDATE_SOCIALINTERACTION_SUCCESS';\r\nexport const UPDATE_SOCIALINTERACTION_FAILURE =\r\n  'UPDATE_SOCIALINTERACTION_FAILURE';\r\n\r\nexport interface AddSocialInteraction extends Action {\r\n  type: typeof ADD_SOCIALINTERACTION_REQUEST;\r\n  payload: SocialInteraction;\r\n}\r\n\r\nexport interface AddSocialInteractionSuccess extends Action {\r\n  type: typeof ADD_SOCIALINTERACTION_SUCCESS;\r\n  payload: SocialInteraction;\r\n}\r\n\r\nexport interface AddSocialInteractionFailure extends Action {\r\n  type: typeof ADD_SOCIALINTERACTION_FAILURE;\r\n  payload: string | undefined;\r\n}\r\n\r\nexport interface FetchSocialInteraction extends Action {\r\n  type: typeof FETCH_SOCIALINTERACTION_REQUEST;\r\n}\r\n\r\nexport interface FetchSocialInteractionSuccess extends Action {\r\n  type: typeof FETCH_SOCIALINTERACTION_SUCCESS;\r\n  payload: SocialInteraction[];\r\n}\r\n\r\nexport interface FetchSocialInteractionFailure extends Action {\r\n  type: typeof FETCH_SOCIALINTERACTION_FAILURE;\r\n  payload: string | undefined;\r\n}\r\n\r\nexport interface DeleteSocialInteraction extends Action {\r\n  type: typeof DELETE_SOCIALINTERACTION_REQUEST;\r\n  payload: string;\r\n}\r\n\r\nexport interface DeleteSocialInteractionSuccess extends Action {\r\n  type: typeof DELETE_SOCIALINTERACTION_SUCCESS;\r\n  payload: SocialInteraction;\r\n}\r\n\r\nexport interface DeleteSocialInteractionFailure extends Action {\r\n  type: typeof DELETE_SOCIALINTERACTION_FAILURE;\r\n  payload: string | undefined;\r\n}\r\n\r\nexport interface UpdateSocialInteraction extends Action {\r\n  type: typeof UPDATE_SOCIALINTERACTION_REQUEST;\r\n  payload: SocialInteraction;\r\n}\r\n\r\nexport interface UpdateSocialInteractionSuccess extends Action {\r\n  type: typeof UPDATE_SOCIALINTERACTION_SUCCESS;\r\n  payload: SocialInteraction;\r\n}\r\n\r\nexport interface UpdateSocialInteractionFailure extends Action {\r\n  type: typeof UPDATE_SOCIALINTERACTION_FAILURE;\r\n  payload: string | undefined;\r\n}\r\n\r\nexport type SocialInteractionActionTypes =\r\n  | AddSocialInteraction\r\n  | AddSocialInteractionSuccess\r\n  | AddSocialInteractionFailure\r\n  | FetchSocialInteraction\r\n  | FetchSocialInteractionSuccess\r\n  | FetchSocialInteractionFailure\r\n  | DeleteSocialInteraction\r\n  | DeleteSocialInteractionSuccess\r\n  | DeleteSocialInteractionFailure\r\n  | UpdateSocialInteraction\r\n  | UpdateSocialInteractionSuccess\r\n  | UpdateSocialInteractionFailure;\r\n","import { Action, Dispatch } from 'redux';\r\nimport { SocialInteraction } from '../../models/SocialInteraction';\r\nimport * as Actions from './SocialInteractionActionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const AddSocialInteractionRequestAction = (\r\n  socialinteraction: SocialInteraction\r\n): Actions.AddSocialInteraction => ({\r\n  type: Actions.ADD_SOCIALINTERACTION_REQUEST,\r\n  payload: socialinteraction,\r\n});\r\n\r\nexport const AddSocialInteractionSuccessAction = (\r\n  socialinteraction: SocialInteraction\r\n): Actions.AddSocialInteractionSuccess => ({\r\n  type: Actions.ADD_SOCIALINTERACTION_SUCCESS,\r\n  payload: socialinteraction,\r\n});\r\n\r\nexport const AddSocialInteractionFailureAction = (\r\n  error: string\r\n): Actions.AddSocialInteractionFailure => ({\r\n  type: Actions.ADD_SOCIALINTERACTION_FAILURE,\r\n  payload: error,\r\n});\r\n\r\nexport const AddSocialInteractionAction = (\r\n  socialinteraction: SocialInteraction\r\n) => {\r\n  return function (dispatch: Dispatch<Action>) {\r\n    dispatch(AddSocialInteractionRequestAction(socialinteraction));\r\n    axios\r\n      .post('/api/social-interactions/', socialinteraction)\r\n      .then((res) => {\r\n        dispatch(AddSocialInteractionSuccessAction(res.data));\r\n      })\r\n      .catch((error) =>\r\n        dispatch(AddSocialInteractionFailureAction(error.message))\r\n      );\r\n  };\r\n};\r\n\r\nexport const FetchSocialInteractionRequestAction = (): Actions.FetchSocialInteraction => ({\r\n  type: Actions.FETCH_SOCIALINTERACTION_REQUEST,\r\n});\r\n\r\nexport const FetchSocialInteractionSuccessAction = (\r\n  socialinteraction: SocialInteraction[]\r\n): Actions.FetchSocialInteractionSuccess => ({\r\n  type: Actions.FETCH_SOCIALINTERACTION_SUCCESS,\r\n  payload: socialinteraction,\r\n});\r\n\r\nexport const FetchSocialInteractionFailureAction = (\r\n  error: string\r\n): Actions.FetchSocialInteractionFailure => ({\r\n  type: Actions.FETCH_SOCIALINTERACTION_FAILURE,\r\n  payload: error,\r\n});\r\n\r\nexport const FetchSocialInteractionAction = () => {\r\n  return function (dispatch: Dispatch<Action>, getState: any) {\r\n    dispatch(FetchSocialInteractionRequestAction());\r\n    axios\r\n      .get<SocialInteraction[]>('/api/social-interactions')\r\n      .then((response) =>\r\n        dispatch(FetchSocialInteractionSuccessAction(response.data))\r\n      )\r\n      .catch((error) => dispatch(FetchSocialInteractionFailureAction(error)));\r\n  };\r\n};\r\n\r\nexport const DeleteSocialInteractionRequestAction = (\r\n  socialinteractionId: string\r\n): Actions.DeleteSocialInteraction => ({\r\n  type: Actions.DELETE_SOCIALINTERACTION_REQUEST,\r\n  payload: socialinteractionId,\r\n});\r\n\r\nexport const DeleteSocialInteractionSuccessAction = (\r\n  socialinteraction: SocialInteraction\r\n): Actions.DeleteSocialInteractionSuccess => ({\r\n  type: Actions.DELETE_SOCIALINTERACTION_SUCCESS,\r\n  payload: socialinteraction,\r\n});\r\n\r\nexport const DeleteSocialInteractionFailureAction = (\r\n  error: string\r\n): Actions.DeleteSocialInteractionFailure => ({\r\n  type: Actions.DELETE_SOCIALINTERACTION_FAILURE,\r\n  payload: error,\r\n});\r\n\r\nexport const DeleteSocialInteractionAction = (\r\n  socialinteraction: SocialInteraction\r\n) => {\r\n  return function (dispatch: Dispatch<Action>) {\r\n    dispatch(DeleteSocialInteractionRequestAction(socialinteraction._id));\r\n    axios\r\n      .delete(`/api/social-interactions/${socialinteraction._id}`)\r\n      .then((res) => {\r\n        dispatch(DeleteSocialInteractionSuccessAction(socialinteraction));\r\n      })\r\n      .catch((error) =>\r\n        dispatch(DeleteSocialInteractionFailureAction(error.message))\r\n      );\r\n  };\r\n};\r\n\r\nexport const UpdateSocialInteractionRequestAction = (\r\n  socialinteraction: SocialInteraction\r\n): Actions.UpdateSocialInteraction => ({\r\n  type: Actions.UPDATE_SOCIALINTERACTION_REQUEST,\r\n  payload: socialinteraction,\r\n});\r\n\r\nexport const UpdateSocialInteractionSuccessAction = (\r\n  socialinteraction: SocialInteraction\r\n): Actions.UpdateSocialInteractionSuccess => ({\r\n  type: Actions.UPDATE_SOCIALINTERACTION_SUCCESS,\r\n  payload: socialinteraction,\r\n});\r\n\r\nexport const UpdateSocialInteractionFailureAction = (\r\n  error: string\r\n): Actions.UpdateSocialInteractionFailure => ({\r\n  type: Actions.UPDATE_SOCIALINTERACTION_FAILURE,\r\n  payload: error,\r\n});\r\n\r\nexport const UpdateSocialInteractionAction = (\r\n  socialinteraction: SocialInteraction\r\n) => {\r\n  return function (dispatch: Dispatch<Action>) {\r\n    dispatch(UpdateSocialInteractionRequestAction(socialinteraction));\r\n    axios\r\n      .put(\r\n        `/api/social-interactions/${socialinteraction._id}`,\r\n        socialinteraction\r\n      )\r\n      .then((res) => {\r\n        dispatch(UpdateSocialInteractionSuccessAction(socialinteraction));\r\n      })\r\n      .catch((error) =>\r\n        dispatch(UpdateSocialInteractionFailureAction(error.message))\r\n      );\r\n  };\r\n};\r\n","import { Action } from 'redux';\r\nimport { VisitedPlace } from '../../models/VisitedPlace';\r\n\r\nexport const ADD_VISITEDPLACE_REQUEST = 'ADD_VISITEDPLACE_REQUEST';\r\nexport const ADD_VISITEDPLACE_SUCCESS = 'ADD_VISITEDPLACE_SUCCESS';\r\nexport const ADD_VISITEDPLACE_FAILURE = 'ADD_VISITEDPLACE_FAILURE';\r\nexport const FETCH_VISITEDPLACE_REQUEST = 'FETCH_VISITEDPLACE_REQUEST';\r\nexport const FETCH_VISITEDPLACE_SUCCESS = 'FETCH_VISITEDPLACE_SUCCESS';\r\nexport const FETCH_VISITEDPLACE_FAILURE = 'FETCH_VISITEDPLACE_FAILURE';\r\nexport const DELETE_VISITEDPLACE_REQUEST = 'DELETE_VISITEDPLACE_REQUEST';\r\nexport const DELETE_VISITEDPLACE_SUCCESS = 'DELETE_VISITEDPLACE_SUCCESS';\r\nexport const DELETE_VISITEDPLACE_FAILURE = 'DELETE_VISITEDPLACE_FAILURE';\r\nexport const UPDATE_VISITEDPLACE_REQUEST = 'UPDATE_VISITEDPLACE_REQUEST';\r\nexport const UPDATE_VISITEDPLACE_SUCCESS = 'UPDATE_VISITEDPLACE_SUCCESS';\r\nexport const UPDATE_VISITEDPLACE_FAILURE = 'UPDATE_VISITEDPLACE_FAILURE';\r\n\r\nexport interface AddVisitedPlace extends Action {\r\n  type: typeof ADD_VISITEDPLACE_REQUEST;\r\n  payload: VisitedPlace;\r\n}\r\n\r\nexport interface AddVisitedPlaceSuccess extends Action {\r\n  type: typeof ADD_VISITEDPLACE_SUCCESS;\r\n  payload: VisitedPlace;\r\n}\r\n\r\nexport interface AddVisitedPlaceFailure extends Action {\r\n  type: typeof ADD_VISITEDPLACE_FAILURE;\r\n  payload: string | undefined;\r\n}\r\n\r\nexport interface FetchVisitedPlace extends Action {\r\n  type: typeof FETCH_VISITEDPLACE_REQUEST;\r\n}\r\n\r\nexport interface FetchVisitedPlaceSuccess extends Action {\r\n  type: typeof FETCH_VISITEDPLACE_SUCCESS;\r\n  payload: VisitedPlace[];\r\n}\r\n\r\nexport interface FetchVisitedPlaceFailure extends Action {\r\n  type: typeof FETCH_VISITEDPLACE_FAILURE;\r\n  payload: string | undefined;\r\n}\r\n\r\nexport interface DeleteVisitedPlace extends Action {\r\n  type: typeof DELETE_VISITEDPLACE_REQUEST;\r\n  payload: string;\r\n}\r\n\r\nexport interface DeleteVisitedPlaceSuccess extends Action {\r\n  type: typeof DELETE_VISITEDPLACE_SUCCESS;\r\n  payload: VisitedPlace;\r\n}\r\n\r\nexport interface DeleteVisitedPlaceFailure extends Action {\r\n  type: typeof DELETE_VISITEDPLACE_FAILURE;\r\n  payload: string | undefined;\r\n}\r\n\r\nexport interface UpdateVisitedPlace extends Action {\r\n  type: typeof UPDATE_VISITEDPLACE_REQUEST;\r\n  payload: VisitedPlace;\r\n}\r\n\r\nexport interface UpdateVisitedPlaceSuccess extends Action {\r\n  type: typeof UPDATE_VISITEDPLACE_SUCCESS;\r\n  payload: VisitedPlace;\r\n}\r\n\r\nexport interface UpdateVisitedPlaceFailure extends Action {\r\n  type: typeof UPDATE_VISITEDPLACE_FAILURE;\r\n  payload: string | undefined;\r\n}\r\n\r\nexport type VisitedPlaceActionTypes =\r\n  | AddVisitedPlace\r\n  | AddVisitedPlaceSuccess\r\n  | AddVisitedPlaceFailure\r\n  | FetchVisitedPlace\r\n  | FetchVisitedPlaceSuccess\r\n  | FetchVisitedPlaceFailure\r\n  | DeleteVisitedPlace\r\n  | DeleteVisitedPlaceSuccess\r\n  | DeleteVisitedPlaceFailure\r\n  | UpdateVisitedPlace\r\n  | UpdateVisitedPlaceSuccess\r\n  | UpdateVisitedPlaceFailure;\r\n","import { Action, Dispatch } from 'redux';\r\nimport { VisitedPlace } from '../../models/VisitedPlace';\r\nimport * as Actions from './VisitedPlaceActionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const AddVisitedPlaceRequestAction = (\r\n  visitedplace: VisitedPlace\r\n): Actions.AddVisitedPlace => ({\r\n  type: Actions.ADD_VISITEDPLACE_REQUEST,\r\n  payload: visitedplace,\r\n});\r\n\r\nexport const AddVisitedPlaceSuccessAction = (\r\n  visitedplace: VisitedPlace\r\n): Actions.AddVisitedPlaceSuccess => ({\r\n  type: Actions.ADD_VISITEDPLACE_SUCCESS,\r\n  payload: visitedplace,\r\n});\r\n\r\nexport const AddVisitedPlaceFailureAction = (\r\n  error: string\r\n): Actions.AddVisitedPlaceFailure => ({\r\n  type: Actions.ADD_VISITEDPLACE_FAILURE,\r\n  payload: error,\r\n});\r\n\r\nexport const AddVisitedPlaceAction = (visitedplace: VisitedPlace) => {\r\n  return function (dispatch: Dispatch<Action>) {\r\n    dispatch(AddVisitedPlaceRequestAction(visitedplace));\r\n    axios\r\n      .post('/api/visited-places/', visitedplace)\r\n      .then((res) => {\r\n        dispatch(AddVisitedPlaceSuccessAction(res.data));\r\n      })\r\n      .catch((error) => dispatch(AddVisitedPlaceFailureAction(error.message)));\r\n  };\r\n};\r\n\r\nexport const FetchVisitedPlaceRequestAction = (): Actions.FetchVisitedPlace => ({\r\n  type: Actions.FETCH_VISITEDPLACE_REQUEST,\r\n});\r\n\r\nexport const FetchVisitedPlaceSuccessAction = (\r\n  visitedplace: VisitedPlace[]\r\n): Actions.FetchVisitedPlaceSuccess => ({\r\n  type: Actions.FETCH_VISITEDPLACE_SUCCESS,\r\n  payload: visitedplace,\r\n});\r\n\r\nexport const FetchVisitedPlaceFailureAction = (\r\n  error: string\r\n): Actions.FetchVisitedPlaceFailure => ({\r\n  type: Actions.FETCH_VISITEDPLACE_FAILURE,\r\n  payload: error,\r\n});\r\n\r\nexport const FetchVisitedPlaceAction = () => {\r\n  return function (dispatch: Dispatch<Action>, getState: any) {\r\n    dispatch(FetchVisitedPlaceRequestAction());\r\n    axios\r\n      .get<VisitedPlace[]>('/api/visited-places')\r\n      .then((response) =>\r\n        dispatch(FetchVisitedPlaceSuccessAction(response.data))\r\n      )\r\n      .catch((error) => dispatch(FetchVisitedPlaceFailureAction(error)));\r\n  };\r\n};\r\n\r\nexport const DeleteVisitedPlaceRequestAction = (\r\n  visitedplaceId: string\r\n): Actions.DeleteVisitedPlace => ({\r\n  type: Actions.DELETE_VISITEDPLACE_REQUEST,\r\n  payload: visitedplaceId,\r\n});\r\n\r\nexport const DeleteVisitedPlaceSuccessAction = (\r\n  visitedplace: VisitedPlace\r\n): Actions.DeleteVisitedPlaceSuccess => ({\r\n  type: Actions.DELETE_VISITEDPLACE_SUCCESS,\r\n  payload: visitedplace,\r\n});\r\n\r\nexport const DeleteVisitedPlaceFailureAction = (\r\n  error: string\r\n): Actions.DeleteVisitedPlaceFailure => ({\r\n  type: Actions.DELETE_VISITEDPLACE_FAILURE,\r\n  payload: error,\r\n});\r\n\r\nexport const DeleteVisitedPlaceAction = (visitedplace: VisitedPlace) => {\r\n  return function (dispatch: Dispatch<Action>) {\r\n    dispatch(DeleteVisitedPlaceRequestAction(visitedplace._id));\r\n    axios\r\n      .delete(`/api/visited-places/${visitedplace._id}`)\r\n      .then((res) => {\r\n        dispatch(DeleteVisitedPlaceSuccessAction(visitedplace));\r\n      })\r\n      .catch((error) =>\r\n        dispatch(DeleteVisitedPlaceFailureAction(error.message))\r\n      );\r\n  };\r\n};\r\n\r\nexport const UpdateVisitedPlaceRequestAction = (\r\n  visitedplace: VisitedPlace\r\n): Actions.UpdateVisitedPlace => ({\r\n  type: Actions.UPDATE_VISITEDPLACE_REQUEST,\r\n  payload: visitedplace,\r\n});\r\n\r\nexport const UpdateVisitedPlaceSuccessAction = (\r\n  visitedplace: VisitedPlace\r\n): Actions.UpdateVisitedPlaceSuccess => ({\r\n  type: Actions.UPDATE_VISITEDPLACE_SUCCESS,\r\n  payload: visitedplace,\r\n});\r\n\r\nexport const UpdateVisitedPlaceFailureAction = (\r\n  error: string\r\n): Actions.UpdateVisitedPlaceFailure => ({\r\n  type: Actions.UPDATE_VISITEDPLACE_FAILURE,\r\n  payload: error,\r\n});\r\n\r\nexport const UpdateVisitedPlaceAction = (visitedplace: VisitedPlace) => {\r\n  return function (dispatch: Dispatch<Action>) {\r\n    dispatch(UpdateVisitedPlaceRequestAction(visitedplace));\r\n    axios\r\n      .put(`/api/visited-places/${visitedplace._id}`, visitedplace)\r\n      .then((res) => {\r\n        dispatch(UpdateVisitedPlaceSuccessAction(visitedplace));\r\n      })\r\n      .catch((error) =>\r\n        dispatch(UpdateVisitedPlaceFailureAction(error.message))\r\n      );\r\n  };\r\n};\r\n","import React from 'react';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Card, CardActions, CardContent, Button, Fab } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport GroupIcon from '@material-ui/icons/Group';\r\nimport PlaceIcon from '@material-ui/icons/Place';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport SocialInteractionsModal from './AddModalSocialInteraction';\r\nimport VisitedPlacesModal from './AddModalVisitedPlace';\r\nimport { SocialInteraction } from '../models/SocialInteraction';\r\nimport { VisitedPlace } from '../models/VisitedPlace';\r\nimport * as SocialInteractionActions from '../redux/actions/SocialInteractionActions';\r\nimport * as VisitedPlaceActions from '../redux/actions/VisitedPlaceActions';\r\nimport { useData } from '../hooks/useData';\r\nimport '../components/Dashboard.css';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: '350px',\r\n      height: '170px',\r\n      display: 'inline-block',\r\n    },\r\n    count: {\r\n      fontSize: '20px',\r\n      marginRight: '30px',\r\n      marginTop: '5px',\r\n    },\r\n  })\r\n);\r\n\r\nconst SocialInteractionsCard: React.FC = () => {\r\n  const classes = useStyles();\r\n  const [modalStatus, setModalStatus] = React.useState(false);\r\n  const { socialInteraction } = useData();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleAddSocialInteraction = (socialInteraction: SocialInteraction) => {\r\n    dispatch(\r\n      SocialInteractionActions.AddSocialInteractionAction(socialInteraction)\r\n    );\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    setModalStatus(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setModalStatus(false);\r\n  };\r\n\r\n  const handleSave = (socialInteraction: any) => {\r\n    setModalStatus(false);\r\n    handleAddSocialInteraction(socialInteraction);\r\n  };\r\n\r\n  return (\r\n    <div className='card'>\r\n      <Card elevation={3} className={classes.root}>\r\n        <CardContent className='card-text'>Add Social Interaction</CardContent>\r\n        <Row>\r\n          <Col md={5}>\r\n            <GroupIcon style={{ fontSize: 40 }} />\r\n          </Col>\r\n          <Col md={7}>\r\n            <div className={classes.count}>{socialInteraction.length}</div>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md={4}>\r\n            <CardActions>\r\n              <div className='card-button'>\r\n                <Button size='small' onClick={handleOpen}>\r\n                  <Fab color='primary' aria-label='add'>\r\n                    <AddIcon />\r\n                  </Fab>\r\n                </Button>\r\n              </div>\r\n\r\n              <SocialInteractionsModal\r\n                modalStatus={modalStatus}\r\n                handleClose={handleClose}\r\n                handleSave={handleSave}\r\n                socialInteraction={socialInteraction}\r\n              />\r\n            </CardActions>\r\n          </Col>\r\n        </Row>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SocialInteractionsCard;\r\n\r\nconst VisitedPlacesCard: React.FC = () => {\r\n  const classes = useStyles();\r\n  const [modalStatus, setModalStatus] = React.useState(false);\r\n  const { visitedPlace } = useData();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleAddVisitedPlace = (visitedPlace: VisitedPlace) => {\r\n    dispatch(VisitedPlaceActions.AddVisitedPlaceAction(visitedPlace));\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    setModalStatus(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setModalStatus(false);\r\n  };\r\n\r\n  const handleSave = (visitedPlace: any) => {\r\n    setModalStatus(false);\r\n    handleAddVisitedPlace(visitedPlace);\r\n  };\r\n  return (\r\n    <div className='card'>\r\n      <Card elevation={3} className={classes.root}>\r\n        <CardContent className='card-text'>Add Visited Place</CardContent>\r\n        <Row>\r\n          <Col md={5}>\r\n            <PlaceIcon style={{ fontSize: 40 }} />\r\n          </Col>\r\n          <Col md={7}>\r\n            <div className={classes.count}>{visitedPlace.length}</div>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md={4}>\r\n            <CardActions>\r\n              <div className='card-button'>\r\n                <Button size='small' onClick={handleOpen}>\r\n                  <Fab color='primary' aria-label='add'>\r\n                    <AddIcon />\r\n                  </Fab>\r\n                </Button>\r\n              </div>\r\n\r\n              <VisitedPlacesModal\r\n                modalStatus={modalStatus}\r\n                handleClose={handleClose}\r\n                handleSave={handleSave}\r\n                visitedPlace={visitedPlace}\r\n              />\r\n            </CardActions>\r\n          </Col>\r\n        </Row>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { VisitedPlacesCard };\r\n","export class SocialInteractionSummary {\r\n  date: string;\r\n  name: string;\r\n  count: number;\r\n\r\n  constructor(socialInteraction: any) {\r\n    this.date = socialInteraction.date;\r\n    this.name = socialInteraction.name;\r\n    this.count = 1;\r\n  }\r\n}\r\n","export class VisitedPlaceSummary {\r\n  date: string;\r\n  place: string;\r\n  count: number;\r\n\r\n  constructor(visitedPlace: any) {\r\n    this.date = visitedPlace.date;\r\n    this.place = visitedPlace.place;\r\n    this.count = 1;\r\n  }\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Row } from 'react-bootstrap';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {\r\n  Chart,\r\n  BarSeries,\r\n  Title,\r\n  ArgumentAxis,\r\n  ValueAxis,\r\n} from '@devexpress/dx-react-chart-material-ui';\r\nimport { Animation } from '@devexpress/dx-react-chart';\r\nimport { Link } from 'react-router-dom';\r\nimport { SocialInteractionSummary } from '../models/SocialInteractionSummary';\r\nimport { VisitedPlaceSummary } from '../models/VisitedPlaceSummary';\r\nimport * as SocialInteractionActions from '../redux/actions/SocialInteractionActions';\r\nimport * as VisitedPlaceActions from '../redux/actions/VisitedPlaceActions';\r\nimport { useData } from '../hooks/useData';\r\nimport '../components/Dashboard.css';\r\n\r\nconst SocialInteractionsChart: React.FC = () => {\r\n  const { socialInteraction } = useData();\r\n  const dispatch = useDispatch();\r\n\r\n  let socialInteractionSummary = socialInteraction.map((item) => {\r\n    return new SocialInteractionSummary({\r\n      name: item.name,\r\n      date: item.date,\r\n    });\r\n  });\r\n  let currentDate = new Date();\r\n  currentDate.setDate(currentDate.getDate() + 1);\r\n  let dayAfterCurrentDate = currentDate.toISOString().slice(0, 10);\r\n\r\n  let date = new Date();\r\n  date.setDate(date.getDate() - 7);\r\n  let sevenDaysAgo = new Date(date).toISOString().slice(0, 10);\r\n\r\n  let socialInteractionList = socialInteractionSummary.filter(\r\n    (item) => item.date >= sevenDaysAgo && item.date <= dayAfterCurrentDate\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(SocialInteractionActions.FetchSocialInteractionAction());\r\n  }, []);\r\n\r\n  const res = Array.from(\r\n    socialInteractionList.reduce(\r\n      (m, { date, count }) =>\r\n        m.set(\r\n          date.toString().substr(0, 10),\r\n          (m.get(date.toString().substr(0, 10)) || 0) + count\r\n        ),\r\n      new Map()\r\n    ),\r\n    ([date, count]) => ({ date, count })\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Paper>\r\n        <Row>\r\n          <Link className='row' to='/socialinteractionlist'>\r\n            View all\r\n          </Link>\r\n        </Row>\r\n        <Chart data={res} height={370}>\r\n          <ArgumentAxis />\r\n          <ValueAxis />\r\n          <BarSeries valueField='count' argumentField='date' />\r\n          <Title text='Recent Social Interactions' />\r\n          <Animation />\r\n        </Chart>\r\n      </Paper>\r\n      <br />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SocialInteractionsChart;\r\n\r\nconst VisitedPlacesChart: React.FC = () => {\r\n  const { visitedPlace } = useData();\r\n  const dispatch = useDispatch();\r\n\r\n  let visitedPlaceSummary = visitedPlace.map((item) => {\r\n    return new VisitedPlaceSummary({\r\n      place: item.place,\r\n      date: item.date,\r\n    });\r\n  });\r\n  let currentDate = new Date();\r\n  currentDate.setDate(currentDate.getDate() + 1);\r\n  let dayAfterCurrentDate = currentDate.toISOString().slice(0, 10);\r\n\r\n  let date = new Date();\r\n  date.setDate(date.getDate() - 7);\r\n  let sevenDaysAgo = new Date(date).toISOString().slice(0, 10);\r\n\r\n  let visitedPlaceList = visitedPlaceSummary.filter(\r\n    (item) => item.date >= sevenDaysAgo && item.date <= dayAfterCurrentDate\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(VisitedPlaceActions.FetchVisitedPlaceAction());\r\n  }, []);\r\n\r\n  const res = Array.from(\r\n    visitedPlaceList.reduce(\r\n      (m, { date, count }) =>\r\n        m.set(\r\n          date.toString().substr(0, 10),\r\n          (m.get(date.toString().substr(0, 10)) || 0) + count\r\n        ),\r\n      new Map()\r\n    ),\r\n    ([date, count]) => ({ date, count })\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Paper>\r\n        <Row>\r\n          <Link className='row' to='/visitedplacelist'>\r\n            View all\r\n          </Link>\r\n        </Row>\r\n        <Chart data={res} height={370}>\r\n          <ArgumentAxis />\r\n          <ValueAxis />\r\n          <BarSeries valueField='count' argumentField='date' />\r\n          <Title text='Recent Visited Places' />\r\n          <Animation />\r\n        </Chart>\r\n      </Paper>\r\n      <br />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { VisitedPlacesChart };\r\n","import React from 'react';\r\nimport { Col } from 'react-bootstrap';\r\nimport SocialInteractionsCard, { VisitedPlacesCard } from './Cards';\r\nimport SocialInteractionsChart, { VisitedPlacesChart } from './Charts';\r\nimport '../components/Dashboard.css';\r\n\r\nconst Dashboard = () => {\r\n  return (\r\n    <div className='card'>\r\n      <div>\r\n        <Col md={12}>\r\n          <Col md={6}>\r\n            <SocialInteractionsCard />\r\n          </Col>\r\n          <Col md={6}>\r\n            <VisitedPlacesCard />\r\n          </Col>\r\n        </Col>\r\n      </div>\r\n      <div>\r\n        <Col md={12}>\r\n          <Col md={6}>\r\n            <SocialInteractionsChart />\r\n          </Col>\r\n          <Col md={6}>\r\n            <VisitedPlacesChart />\r\n          </Col>\r\n        </Col>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport MaterialTable, { Column } from 'material-table';\r\nimport { Link } from 'react-router-dom';\r\nimport { FormControlLabel, Checkbox, Typography } from '@material-ui/core';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport { SocialInteraction } from '../models/SocialInteraction';\r\nimport { useData } from '../hooks/useData';\r\nimport * as SocialInteractionActions from '../redux/actions/SocialInteractionActions';\r\nimport '../components/Dashboard.css';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    title: {\r\n      fontSize: '20px',\r\n    },\r\n    label: {\r\n      fontSize: '12px',\r\n    },\r\n    checkbox: {\r\n      marginLeft: '1000px',\r\n    },\r\n  })\r\n);\r\n\r\nconst columnHeaders: Array<Column<SocialInteraction>> = [\r\n  {\r\n    title: 'Id',\r\n    field: 'id',\r\n    hidden: true,\r\n    cellStyle: {\r\n      textAlign: 'center',\r\n    },\r\n  },\r\n  {\r\n    title: 'Name',\r\n    field: 'name',\r\n    cellStyle: {\r\n      textAlign: 'center',\r\n    },\r\n    validate: (rowData) => rowData.name !== '',\r\n  },\r\n  {\r\n    title: 'Date',\r\n    field: 'date',\r\n    type: 'date',\r\n    cellStyle: {\r\n      textAlign: 'center',\r\n    },\r\n    validate: (rowData) => rowData.date !== null,\r\n  },\r\n  {\r\n    title: 'Hours',\r\n    field: 'hours',\r\n    cellStyle: {\r\n      textAlign: 'center',\r\n    },\r\n    validate: (rowData) => rowData.hours > 0,\r\n  },\r\n  {\r\n    title: 'Is Social Distancing Observed?',\r\n    field: 'isSocialDistancing',\r\n    type: 'boolean',\r\n    cellStyle: {\r\n      textAlign: 'center',\r\n    },\r\n  },\r\n];\r\n\r\nconst SocialInteractionsList: React.FC = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const { socialInteraction, loading } = useData();\r\n  const [showLast14Days, setshowLast14Days] = React.useState(false);\r\n\r\n  const handleAddSocialInteraction = (socialInteraction: SocialInteraction) => {\r\n    dispatch(\r\n      SocialInteractionActions.AddSocialInteractionAction(socialInteraction)\r\n    );\r\n  };\r\n\r\n  const handleDeleteSocialInteraction = (\r\n    socialInteraction: SocialInteraction\r\n  ) => {\r\n    dispatch(\r\n      SocialInteractionActions.DeleteSocialInteractionAction(socialInteraction)\r\n    );\r\n  };\r\n\r\n  const handleUpdateSocialInteraction = (\r\n    socialInteraction: SocialInteraction\r\n  ) => {\r\n    dispatch(\r\n      SocialInteractionActions.UpdateSocialInteractionAction(socialInteraction)\r\n    );\r\n  };\r\n\r\n  const handleCheckBoxChange = () => {\r\n    setshowLast14Days(!showLast14Days);\r\n  };\r\n\r\n  let currentDate = new Date();\r\n  currentDate.setDate(currentDate.getDate() + 1);\r\n  let dayAfterCurrentDate = currentDate.toISOString().slice(0, 10);\r\n\r\n  let date = new Date();\r\n  date.setDate(date.getDate() - 14);\r\n  let fourteenDaysAgo = new Date(date).toISOString().slice(0, 10);\r\n\r\n  let socialInteractionFor14days = socialInteraction.filter(\r\n    (item) =>\r\n      new Date(item.date).toISOString().slice(0, 10) >= fourteenDaysAgo &&\r\n      new Date(item.date).toISOString().slice(0, 10) <= dayAfterCurrentDate\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(SocialInteractionActions.FetchSocialInteractionAction());\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div className='link-dashboard'>\r\n        <Link to='/home'>Back to Dashboard</Link>\r\n      </div>\r\n      <FormControlLabel\r\n        classes={{\r\n          label: classes.label,\r\n        }}\r\n        control={\r\n          <Checkbox\r\n            classes={{\r\n              root: classes.checkbox,\r\n            }}\r\n            checked={showLast14Days}\r\n            onChange={handleCheckBoxChange}\r\n            name='checkedB'\r\n            color='primary'\r\n          />\r\n        }\r\n        label='Display records within last 14 days'\r\n      />\r\n      <MaterialTable\r\n        title={\r\n          <Typography variant='h6' className={classes.title}>\r\n            Social Interaction List\r\n          </Typography>\r\n        }\r\n        isLoading={loading}\r\n        columns={columnHeaders}\r\n        data={showLast14Days ? socialInteractionFor14days : socialInteraction}\r\n        editable={{\r\n          onRowAdd: (newData) =>\r\n            new Promise((resolve) => {\r\n              setTimeout(() => {\r\n                resolve(null);\r\n                handleAddSocialInteraction(newData);\r\n              }, 600);\r\n            }),\r\n          onRowUpdate: (newData, oldData) =>\r\n            new Promise((resolve) => {\r\n              resolve(null);\r\n              handleUpdateSocialInteraction(newData);\r\n            }),\r\n          onRowDelete: (oldData) =>\r\n            new Promise((resolve) => {\r\n              resolve(null);\r\n              handleDeleteSocialInteraction(oldData);\r\n            }),\r\n        }}\r\n        options={{\r\n          rowStyle: (rowData) => {\r\n            if (!rowData.isSocialDistancing) {\r\n              return { backgroundColor: '#fccfcc' };\r\n            }\r\n            return { textAlign: 'center' };\r\n          },\r\n          headerStyle: {\r\n            backgroundColor: '#a7cef2',\r\n            color: '#000',\r\n            fontSize: '15px',\r\n            textAlign: 'center',\r\n          },\r\n          searchFieldStyle: {\r\n            fontSize: '13px',\r\n          },\r\n        }}\r\n      />\r\n      <br />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SocialInteractionsList;\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport MaterialTable, { Column } from 'material-table';\r\nimport { Link } from 'react-router-dom';\r\nimport { FormControlLabel, Checkbox, Typography } from '@material-ui/core';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport { VisitedPlace } from '../models/VisitedPlace';\r\nimport { useData } from '../hooks/useData';\r\nimport * as VisitedPlaceActions from '../redux/actions/VisitedPlaceActions';\r\nimport '../components/Dashboard.css';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    title: {\r\n      fontSize: '20px',\r\n    },\r\n    label: {\r\n      fontSize: '12px',\r\n    },\r\n    checkbox: {\r\n      marginLeft: '1000px',\r\n    },\r\n  })\r\n);\r\n\r\nconst columnHeaders: Array<Column<VisitedPlace>> = [\r\n  {\r\n    title: 'Id',\r\n    field: 'id',\r\n    hidden: true,\r\n    cellStyle: {\r\n      textAlign: 'center',\r\n    },\r\n  },\r\n  {\r\n    title: 'Place',\r\n    field: 'place',\r\n    cellStyle: {\r\n      textAlign: 'center',\r\n    },\r\n    validate: (rowData) => rowData.place !== '',\r\n  },\r\n  {\r\n    title: 'Date',\r\n    field: 'date',\r\n    type: 'date',\r\n    cellStyle: {\r\n      textAlign: 'center',\r\n    },\r\n    validate: (rowData) => rowData.date !== null,\r\n  },\r\n  {\r\n    title: 'Hours',\r\n    field: 'hours',\r\n    cellStyle: {\r\n      textAlign: 'center',\r\n    },\r\n    validate: (rowData) => rowData.hours >= 1,\r\n  },\r\n  {\r\n    title: 'Is Visited Place Crowded?',\r\n    field: 'isCrowded',\r\n    type: 'boolean',\r\n    cellStyle: {\r\n      textAlign: 'center',\r\n    },\r\n  },\r\n];\r\n\r\nconst VisitedPlacesList: React.FC = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const { visitedPlace, isloading } = useData();\r\n  const [showLast14Days, setshowLast14Days] = React.useState(false);\r\n\r\n  const handleAddVisitedPlace = (visitedPlace: VisitedPlace) => {\r\n    dispatch(VisitedPlaceActions.AddVisitedPlaceAction(visitedPlace));\r\n  };\r\n\r\n  const handleDeleteVisitedPlace = (visitedPlace: VisitedPlace) => {\r\n    dispatch(VisitedPlaceActions.DeleteVisitedPlaceAction(visitedPlace));\r\n  };\r\n\r\n  const handleUpdateVisitedPlace = (visitedPlace: VisitedPlace) => {\r\n    dispatch(VisitedPlaceActions.UpdateVisitedPlaceAction(visitedPlace));\r\n  };\r\n\r\n  const handleCheckBoxChange = () => {\r\n    setshowLast14Days(!showLast14Days);\r\n  };\r\n\r\n  let currentDate = new Date();\r\n  currentDate.setDate(currentDate.getDate() + 1);\r\n  let dayAfterCurrentDate = currentDate.toISOString().slice(0, 10);\r\n\r\n  let date = new Date();\r\n  date.setDate(date.getDate() - 14);\r\n  let fourteenDaysAgo = new Date(date).toISOString().slice(0, 10);\r\n\r\n  let visitedPlaceFor14days = visitedPlace.filter(\r\n    (item) =>\r\n      new Date(item.date).toISOString().slice(0, 10) >= fourteenDaysAgo &&\r\n      new Date(item.date).toISOString().slice(0, 10) <= dayAfterCurrentDate\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(VisitedPlaceActions.FetchVisitedPlaceAction());\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div className='link-dashboard'>\r\n        <Link to='/home'>Back to Dashboard</Link>\r\n      </div>\r\n      <FormControlLabel\r\n        classes={{\r\n          label: classes.label,\r\n        }}\r\n        control={\r\n          <Checkbox\r\n            classes={{\r\n              root: classes.checkbox,\r\n            }}\r\n            checked={showLast14Days}\r\n            onChange={handleCheckBoxChange}\r\n            name='checkedB'\r\n            color='primary'\r\n          />\r\n        }\r\n        label='Display records within last 14 days'\r\n      />\r\n      <MaterialTable\r\n        title={\r\n          <Typography variant='h6' className={classes.title}>\r\n            Visited Place List\r\n          </Typography>\r\n        }\r\n        isLoading={isloading}\r\n        columns={columnHeaders}\r\n        data={showLast14Days ? visitedPlaceFor14days : visitedPlace}\r\n        editable={{\r\n          onRowAdd: (newData) =>\r\n            new Promise((resolve) => {\r\n              setTimeout(() => {\r\n                resolve(null);\r\n                handleAddVisitedPlace(newData);\r\n              }, 600);\r\n            }),\r\n          onRowUpdate: (newData, oldData) =>\r\n            new Promise((resolve) => {\r\n              resolve(null);\r\n              handleUpdateVisitedPlace(newData);\r\n            }),\r\n          onRowDelete: (oldData) =>\r\n            new Promise((resolve) => {\r\n              resolve(null);\r\n              handleDeleteVisitedPlace(oldData);\r\n            }),\r\n        }}\r\n        options={{\r\n          rowStyle: (rowData) => {\r\n            if (rowData.isCrowded) {\r\n              return { backgroundColor: '#fccfcc' };\r\n            }\r\n            return { textAlign: 'center' };\r\n          },\r\n          headerStyle: {\r\n            backgroundColor: '#a7cef2',\r\n            color: '#000',\r\n            fontSize: '15px',\r\n            textAlign: 'center',\r\n          },\r\n          searchFieldStyle: {\r\n            fontSize: '13px',\r\n          },\r\n        }}\r\n      />\r\n      <br />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VisitedPlacesList;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Dialog, DialogContent } from '@material-ui/core';\r\nimport '../components/Dashboard.css';\r\n\r\nconst PageNotFound = () => {\r\n  return (\r\n    <Dialog\r\n      open={true}\r\n      fullScreen\r\n      disableBackdropClick\r\n      aria-labelledby='form-dialog-title'\r\n    >\r\n      <DialogContent>\r\n        <div className='contents'>Page Not Found</div>\r\n        <Link className='links' to='/'>\r\n          Back to Dashboard\r\n        </Link>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default PageNotFound;\r\n","import React from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { Col } from 'react-bootstrap';\nimport Paper from '@material-ui/core/Paper';\nimport Header from './components/Header';\nimport Profile from './components/Profile';\nimport Dashboard from './components/Dashboard';\nimport SocialInteractionsList from './components/SocialInteractionTable';\nimport VisitedPlacesList from './components/VisitedPlaceTable';\nimport PageNotFound from './components/PageNotFound';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Paper elevation={24} className='size'>\n        <Col md={12}>\n          <Header />\n          <Col md={12} className='profile-app'>\n            <Profile />\n          </Col>\n          <Col md={12}>\n            <Switch>\n              <Route exact path='/' component={Dashboard} />\n              <Redirect from='/home' to='/' />\n              <Route\n                path='/socialinteractionlist'\n                component={SocialInteractionsList}\n              />\n              <Route path='/visitedplacelist' component={VisitedPlacesList} />\n              <Route path='*' component={PageNotFound} />\n            </Switch>\n          </Col>\n        </Col>\n      </Paper>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { Action, AnyAction, Reducer, StoreEnhancer, StoreEnhancerStoreCreator } from \"redux\";\r\n\r\nconst round = (value: number) => Math.round(value * 100) / 100;\r\nconst monitoEnhancer: StoreEnhancer = (createStore: StoreEnhancerStoreCreator): StoreEnhancerStoreCreator =>\r\n    <S = any, A extends Action = AnyAction>(reducer: Reducer<S, A>) => {\r\n        const monitorReducer = (state: any, action: any) => {\r\n            const start = performance.now()\r\n            console.log('reducer start process:', start)\r\n            console.log('reducer processing....')\r\n            const newState = reducer(state, action)\r\n            const end = performance.now()\r\n            console.log('reducer end process:', end)\r\n            const diff = round(end - start)\r\n            console.log('reducer process time:', diff)\r\n            return newState;\r\n        }\r\n\r\n        const store = createStore(monitorReducer);\r\n        return store;\r\n    }\r\n\r\nexport default monitoEnhancer;","import { SocialInteraction } from '../../models/SocialInteraction';\r\nimport * as Actions from '../actions/SocialInteractionActionTypes';\r\n\r\nexport interface SocialInteractionState {\r\n  loading: boolean;\r\n  socialInteraction: SocialInteraction[];\r\n  error: string | undefined;\r\n}\r\n\r\nconst initialState: SocialInteractionState = {\r\n  loading: false,\r\n  socialInteraction: [],\r\n  error: '',\r\n};\r\n\r\nexport const SocialInteractionReducers = (\r\n  state = initialState,\r\n  action: Actions.SocialInteractionActionTypes\r\n): SocialInteractionState => {\r\n  switch (action.type) {\r\n    case Actions.ADD_SOCIALINTERACTION_REQUEST:\r\n      return {\r\n        ...state,\r\n        error: '',\r\n        loading: true,\r\n      };\r\n    case Actions.ADD_SOCIALINTERACTION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        socialInteraction: [...state.socialInteraction, action.payload],\r\n        error: '',\r\n        loading: false,\r\n      };\r\n    case Actions.ADD_SOCIALINTERACTION_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        loading: false,\r\n      };\r\n    case Actions.FETCH_SOCIALINTERACTION_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case Actions.FETCH_SOCIALINTERACTION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        socialInteraction: action.payload,\r\n        error: '',\r\n        loading: false,\r\n      };\r\n    case Actions.FETCH_SOCIALINTERACTION_FAILURE:\r\n      return {\r\n        ...state,\r\n        socialInteraction: [],\r\n        error: action.payload,\r\n        loading: false,\r\n      };\r\n    case Actions.DELETE_SOCIALINTERACTION_REQUEST:\r\n      return {\r\n        ...state,\r\n        error: '',\r\n        loading: true,\r\n      };\r\n    case Actions.DELETE_SOCIALINTERACTION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        socialInteraction: state.socialInteraction.filter(\r\n          (socialInteraction) => socialInteraction._id !== action.payload._id\r\n        ),\r\n        error: '',\r\n        loading: false,\r\n      };\r\n    case Actions.DELETE_SOCIALINTERACTION_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        loading: false,\r\n      };\r\n    case Actions.UPDATE_SOCIALINTERACTION_REQUEST:\r\n      return {\r\n        ...state,\r\n        error: '',\r\n        loading: true,\r\n      };\r\n    case Actions.UPDATE_SOCIALINTERACTION_SUCCESS:\r\n      const socialInteraction = [...state.socialInteraction];\r\n      const index = socialInteraction.findIndex(\r\n        (x) => x._id == action.payload._id\r\n      );\r\n      if (index >= 0) {\r\n        socialInteraction[index] = {\r\n          ...action.payload,\r\n        };\r\n      }\r\n      return {\r\n        ...state,\r\n        socialInteraction: socialInteraction,\r\n        error: '',\r\n        loading: false,\r\n      };\r\n    case Actions.UPDATE_SOCIALINTERACTION_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        loading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { VisitedPlace } from '../../models/VisitedPlace';\r\nimport * as Actions from '../actions/VisitedPlaceActionTypes';\r\n\r\nexport interface VisitedPlaceState {\r\n  isloading: boolean;\r\n  visitedPlace: VisitedPlace[];\r\n  error: string | undefined;\r\n}\r\n\r\nconst initialState: VisitedPlaceState = {\r\n  isloading: false,\r\n  visitedPlace: [],\r\n  error: '',\r\n};\r\n\r\nexport const VisitedPlaceReducers = (\r\n  state = initialState,\r\n  action: Actions.VisitedPlaceActionTypes\r\n): VisitedPlaceState => {\r\n  switch (action.type) {\r\n    case Actions.ADD_VISITEDPLACE_REQUEST:\r\n      return {\r\n        ...state,\r\n        error: '',\r\n        isloading: true,\r\n      };\r\n    case Actions.ADD_VISITEDPLACE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        visitedPlace: [...state.visitedPlace, action.payload],\r\n        error: '',\r\n        isloading: false,\r\n      };\r\n    case Actions.ADD_VISITEDPLACE_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        isloading: false,\r\n      };\r\n    case Actions.FETCH_VISITEDPLACE_REQUEST:\r\n      return {\r\n        ...state,\r\n        isloading: true,\r\n      };\r\n    case Actions.FETCH_VISITEDPLACE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        visitedPlace: action.payload,\r\n        error: '',\r\n        isloading: false,\r\n      };\r\n    case Actions.FETCH_VISITEDPLACE_FAILURE:\r\n      return {\r\n        ...state,\r\n        visitedPlace: [],\r\n        error: action.payload,\r\n        isloading: false,\r\n      };\r\n    case Actions.DELETE_VISITEDPLACE_REQUEST:\r\n      return {\r\n        ...state,\r\n        error: '',\r\n        isloading: true,\r\n      };\r\n    case Actions.DELETE_VISITEDPLACE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        visitedPlace: state.visitedPlace.filter(\r\n          (visitedPlace) => visitedPlace._id !== action.payload._id\r\n        ),\r\n        error: '',\r\n        isloading: false,\r\n      };\r\n    case Actions.DELETE_VISITEDPLACE_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        isloading: false,\r\n      };\r\n    case Actions.UPDATE_VISITEDPLACE_REQUEST:\r\n      return {\r\n        ...state,\r\n        error: '',\r\n        isloading: true,\r\n      };\r\n    case Actions.UPDATE_VISITEDPLACE_SUCCESS:\r\n      const visitedPlace = [...state.visitedPlace];\r\n      const index = visitedPlace.findIndex((x) => x._id == action.payload._id);\r\n      if (index >= 0) {\r\n        visitedPlace[index] = {\r\n          ...action.payload,\r\n        };\r\n      }\r\n      return {\r\n        ...state,\r\n        visitedPlace: visitedPlace,\r\n        error: '',\r\n        isloading: false,\r\n      };\r\n    case Actions.UPDATE_VISITEDPLACE_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        isloading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { applyMiddleware, combineReducers, compose, createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport { Middlewares } from './LoggerMiddleware';\r\nimport monitoEnhancer from './MonitorEnhancer';\r\nimport { SocialInteractionReducers } from './reducers/SocialInteractionReducers';\r\nimport { VisitedPlaceReducers } from './reducers/VisitedPlaceReducers';\r\n\r\nconst enhancers = compose(monitoEnhancer);\r\nconst reducers = combineReducers({\r\n  socialInteraction: SocialInteractionReducers,\r\n  visitedPlace: VisitedPlaceReducers,\r\n});\r\n\r\nconst store = createStore(\r\n  reducers,\r\n  // composeWithDevTools(applyMiddleware(...Middlewares, thunk), enhancers)\r\n  applyMiddleware(thunk)\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport axios from 'axios';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Store from './redux/Store';\naxios.defaults.baseURL = 'http://localhost:5000';\n\nReactDOM.render(\n  <Provider store={Store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}